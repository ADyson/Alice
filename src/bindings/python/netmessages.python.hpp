// Generated by the protocol buffer compiler. DO NOT EDIT!
// Source: netmessages

#ifndef PROTOBUF_netmessages_BOOST_PYTHON_INCLUDED
#define PROTOBUF_netmessages_BOOST_PYTHON_INCLUDED

class_<CMsg_CVars_CVar>("CMsg_CVars_CVar")
	.def("has_name", &CMsg_CVars_CVar::has_name)
	.def("name", &CMsg_CVars_CVar::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CMsg_CVars_CVar::clear_name)
	.def("has_value", &CMsg_CVars_CVar::has_value)
	.def("value", &CMsg_CVars_CVar::value, return_value_policy<copy_const_reference>())
	.def("clear_value", &CMsg_CVars_CVar::clear_value)
;

class_<CMsg_CVars>("CMsg_CVars")
	.def("cvars_size", &CMsg_CVars::cvars_size)
	.def("clear_cvars", &CMsg_CVars::clear_cvars)
;

class_<CNETMsg_NOP>("CNETMsg_NOP")
;

class_<CNETMsg_Disconnect>("CNETMsg_Disconnect")
	.def("has_text", &CNETMsg_Disconnect::has_text)
	.def("text", &CNETMsg_Disconnect::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CNETMsg_Disconnect::clear_text)
;

class_<CNETMsg_File>("CNETMsg_File")
	.def("has_transfer_id", &CNETMsg_File::has_transfer_id)
	.def("transfer_id", &CNETMsg_File::transfer_id)
	.def("clear_transfer_id", &CNETMsg_File::clear_transfer_id)
	.def("has_file_name", &CNETMsg_File::has_file_name)
	.def("file_name", &CNETMsg_File::file_name, return_value_policy<copy_const_reference>())
	.def("clear_file_name", &CNETMsg_File::clear_file_name)
	.def("has_is_replay_demo_file", &CNETMsg_File::has_is_replay_demo_file)
	.def("is_replay_demo_file", &CNETMsg_File::is_replay_demo_file)
	.def("clear_is_replay_demo_file", &CNETMsg_File::clear_is_replay_demo_file)
	.def("has_deny", &CNETMsg_File::has_deny)
	.def("deny", &CNETMsg_File::deny)
	.def("clear_deny", &CNETMsg_File::clear_deny)
;

class_<CNETMsg_SplitScreenUser>("CNETMsg_SplitScreenUser")
	.def("has_slot", &CNETMsg_SplitScreenUser::has_slot)
	.def("slot", &CNETMsg_SplitScreenUser::slot)
	.def("clear_slot", &CNETMsg_SplitScreenUser::clear_slot)
;

class_<CNETMsg_Tick>("CNETMsg_Tick")
	.def("has_tick", &CNETMsg_Tick::has_tick)
	.def("tick", &CNETMsg_Tick::tick)
	.def("clear_tick", &CNETMsg_Tick::clear_tick)
	.def("has_host_frametime", &CNETMsg_Tick::has_host_frametime)
	.def("host_frametime", &CNETMsg_Tick::host_frametime)
	.def("clear_host_frametime", &CNETMsg_Tick::clear_host_frametime)
	.def("has_host_frametime_std_deviation", &CNETMsg_Tick::has_host_frametime_std_deviation)
	.def("host_frametime_std_deviation", &CNETMsg_Tick::host_frametime_std_deviation)
	.def("clear_host_frametime_std_deviation", &CNETMsg_Tick::clear_host_frametime_std_deviation)
;

class_<CNETMsg_StringCmd>("CNETMsg_StringCmd")
	.def("has_command", &CNETMsg_StringCmd::has_command)
	.def("command", &CNETMsg_StringCmd::command, return_value_policy<copy_const_reference>())
	.def("clear_command", &CNETMsg_StringCmd::clear_command)
;

class_<CNETMsg_SetConVar>("CNETMsg_SetConVar")
	.def("has_convars", &CNETMsg_SetConVar::has_convars)
	.def("convars", &CNETMsg_SetConVar::convars, return_value_policy<reference_existing_object>())
	.def("clear_convars", &CNETMsg_SetConVar::clear_convars)
;

class_<CNETMsg_SignonState>("CNETMsg_SignonState")
	.def("has_signon_state", &CNETMsg_SignonState::has_signon_state)
	.def("signon_state", &CNETMsg_SignonState::signon_state)
	.def("clear_signon_state", &CNETMsg_SignonState::clear_signon_state)
	.def("has_spawn_count", &CNETMsg_SignonState::has_spawn_count)
	.def("spawn_count", &CNETMsg_SignonState::spawn_count)
	.def("clear_spawn_count", &CNETMsg_SignonState::clear_spawn_count)
	.def("has_num_server_players", &CNETMsg_SignonState::has_num_server_players)
	.def("num_server_players", &CNETMsg_SignonState::num_server_players)
	.def("clear_num_server_players", &CNETMsg_SignonState::clear_num_server_players)
	.def("players_networkids_size", &CNETMsg_SignonState::players_networkids_size)
	.def("clear_players_networkids", &CNETMsg_SignonState::clear_players_networkids)
	.def("has_map_name", &CNETMsg_SignonState::has_map_name)
	.def("map_name", &CNETMsg_SignonState::map_name, return_value_policy<copy_const_reference>())
	.def("clear_map_name", &CNETMsg_SignonState::clear_map_name)
;

class_<CCLCMsg_ClientInfo>("CCLCMsg_ClientInfo")
	.def("has_send_table_crc", &CCLCMsg_ClientInfo::has_send_table_crc)
	.def("send_table_crc", &CCLCMsg_ClientInfo::send_table_crc)
	.def("clear_send_table_crc", &CCLCMsg_ClientInfo::clear_send_table_crc)
	.def("has_server_count", &CCLCMsg_ClientInfo::has_server_count)
	.def("server_count", &CCLCMsg_ClientInfo::server_count)
	.def("clear_server_count", &CCLCMsg_ClientInfo::clear_server_count)
	.def("has_is_hltv", &CCLCMsg_ClientInfo::has_is_hltv)
	.def("is_hltv", &CCLCMsg_ClientInfo::is_hltv)
	.def("clear_is_hltv", &CCLCMsg_ClientInfo::clear_is_hltv)
	.def("has_is_replay", &CCLCMsg_ClientInfo::has_is_replay)
	.def("is_replay", &CCLCMsg_ClientInfo::is_replay)
	.def("clear_is_replay", &CCLCMsg_ClientInfo::clear_is_replay)
	.def("has_friends_id", &CCLCMsg_ClientInfo::has_friends_id)
	.def("friends_id", &CCLCMsg_ClientInfo::friends_id)
	.def("clear_friends_id", &CCLCMsg_ClientInfo::clear_friends_id)
	.def("has_friends_name", &CCLCMsg_ClientInfo::has_friends_name)
	.def("friends_name", &CCLCMsg_ClientInfo::friends_name, return_value_policy<copy_const_reference>())
	.def("clear_friends_name", &CCLCMsg_ClientInfo::clear_friends_name)
	.def("custom_files_size", &CCLCMsg_ClientInfo::custom_files_size)
	.def("clear_custom_files", &CCLCMsg_ClientInfo::clear_custom_files)
;

class_<CCLCMsg_Move>("CCLCMsg_Move")
	.def("has_num_backup_commands", &CCLCMsg_Move::has_num_backup_commands)
	.def("num_backup_commands", &CCLCMsg_Move::num_backup_commands)
	.def("clear_num_backup_commands", &CCLCMsg_Move::clear_num_backup_commands)
	.def("has_num_new_commands", &CCLCMsg_Move::has_num_new_commands)
	.def("num_new_commands", &CCLCMsg_Move::num_new_commands)
	.def("clear_num_new_commands", &CCLCMsg_Move::clear_num_new_commands)
	.def("has_data", &CCLCMsg_Move::has_data)
	.def("data", &CCLCMsg_Move::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CCLCMsg_Move::clear_data)
;

class_<CCLCMsg_VoiceData>("CCLCMsg_VoiceData")
	.def("has_data", &CCLCMsg_VoiceData::has_data)
	.def("data", &CCLCMsg_VoiceData::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CCLCMsg_VoiceData::clear_data)
	.def("has_xuid", &CCLCMsg_VoiceData::has_xuid)
	.def("xuid", &CCLCMsg_VoiceData::xuid)
	.def("clear_xuid", &CCLCMsg_VoiceData::clear_xuid)
	.def("has_format", &CCLCMsg_VoiceData::has_format)
	.def("format", &CCLCMsg_VoiceData::format)
	.def("clear_format", &CCLCMsg_VoiceData::clear_format)
;

class_<CCLCMsg_BaselineAck>("CCLCMsg_BaselineAck")
	.def("has_baseline_tick", &CCLCMsg_BaselineAck::has_baseline_tick)
	.def("baseline_tick", &CCLCMsg_BaselineAck::baseline_tick)
	.def("clear_baseline_tick", &CCLCMsg_BaselineAck::clear_baseline_tick)
	.def("has_baseline_nr", &CCLCMsg_BaselineAck::has_baseline_nr)
	.def("baseline_nr", &CCLCMsg_BaselineAck::baseline_nr)
	.def("clear_baseline_nr", &CCLCMsg_BaselineAck::clear_baseline_nr)
;

class_<CCLCMsg_ListenEvents>("CCLCMsg_ListenEvents")
	.def("event_mask_size", &CCLCMsg_ListenEvents::event_mask_size)
	.def("clear_event_mask", &CCLCMsg_ListenEvents::clear_event_mask)
;

class_<CCLCMsg_RespondCvarValue>("CCLCMsg_RespondCvarValue")
	.def("has_cookie", &CCLCMsg_RespondCvarValue::has_cookie)
	.def("cookie", &CCLCMsg_RespondCvarValue::cookie)
	.def("clear_cookie", &CCLCMsg_RespondCvarValue::clear_cookie)
	.def("has_status_code", &CCLCMsg_RespondCvarValue::has_status_code)
	.def("status_code", &CCLCMsg_RespondCvarValue::status_code)
	.def("clear_status_code", &CCLCMsg_RespondCvarValue::clear_status_code)
	.def("has_name", &CCLCMsg_RespondCvarValue::has_name)
	.def("name", &CCLCMsg_RespondCvarValue::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CCLCMsg_RespondCvarValue::clear_name)
	.def("has_value", &CCLCMsg_RespondCvarValue::has_value)
	.def("value", &CCLCMsg_RespondCvarValue::value, return_value_policy<copy_const_reference>())
	.def("clear_value", &CCLCMsg_RespondCvarValue::clear_value)
;

class_<CCLCMsg_FileCRCCheck>("CCLCMsg_FileCRCCheck")
	.def("has_code_path", &CCLCMsg_FileCRCCheck::has_code_path)
	.def("code_path", &CCLCMsg_FileCRCCheck::code_path)
	.def("clear_code_path", &CCLCMsg_FileCRCCheck::clear_code_path)
	.def("has_path", &CCLCMsg_FileCRCCheck::has_path)
	.def("path", &CCLCMsg_FileCRCCheck::path, return_value_policy<copy_const_reference>())
	.def("clear_path", &CCLCMsg_FileCRCCheck::clear_path)
	.def("has_code_filename", &CCLCMsg_FileCRCCheck::has_code_filename)
	.def("code_filename", &CCLCMsg_FileCRCCheck::code_filename)
	.def("clear_code_filename", &CCLCMsg_FileCRCCheck::clear_code_filename)
	.def("has_filename", &CCLCMsg_FileCRCCheck::has_filename)
	.def("filename", &CCLCMsg_FileCRCCheck::filename, return_value_policy<copy_const_reference>())
	.def("clear_filename", &CCLCMsg_FileCRCCheck::clear_filename)
	.def("has_crc", &CCLCMsg_FileCRCCheck::has_crc)
	.def("crc", &CCLCMsg_FileCRCCheck::crc)
	.def("clear_crc", &CCLCMsg_FileCRCCheck::clear_crc)
;

class_<CCLCMsg_LoadingProgress>("CCLCMsg_LoadingProgress")
	.def("has_progress", &CCLCMsg_LoadingProgress::has_progress)
	.def("progress", &CCLCMsg_LoadingProgress::progress)
	.def("clear_progress", &CCLCMsg_LoadingProgress::clear_progress)
;

class_<CCLCMsg_SplitPlayerConnect>("CCLCMsg_SplitPlayerConnect")
	.def("has_convars", &CCLCMsg_SplitPlayerConnect::has_convars)
	.def("convars", &CCLCMsg_SplitPlayerConnect::convars, return_value_policy<reference_existing_object>())
	.def("clear_convars", &CCLCMsg_SplitPlayerConnect::clear_convars)
;

class_<CCLCMsg_ClientMessage>("CCLCMsg_ClientMessage")
	.def("has_msg_type", &CCLCMsg_ClientMessage::has_msg_type)
	.def("msg_type", &CCLCMsg_ClientMessage::msg_type)
	.def("clear_msg_type", &CCLCMsg_ClientMessage::clear_msg_type)
	.def("has_data", &CCLCMsg_ClientMessage::has_data)
	.def("data", &CCLCMsg_ClientMessage::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CCLCMsg_ClientMessage::clear_data)
;

class_<CSVCMsg_ServerInfo>("CSVCMsg_ServerInfo")
	.def("has_protocol", &CSVCMsg_ServerInfo::has_protocol)
	.def("protocol", &CSVCMsg_ServerInfo::protocol)
	.def("clear_protocol", &CSVCMsg_ServerInfo::clear_protocol)
	.def("has_server_count", &CSVCMsg_ServerInfo::has_server_count)
	.def("server_count", &CSVCMsg_ServerInfo::server_count)
	.def("clear_server_count", &CSVCMsg_ServerInfo::clear_server_count)
	.def("has_is_dedicated", &CSVCMsg_ServerInfo::has_is_dedicated)
	.def("is_dedicated", &CSVCMsg_ServerInfo::is_dedicated)
	.def("clear_is_dedicated", &CSVCMsg_ServerInfo::clear_is_dedicated)
	.def("has_is_hltv", &CSVCMsg_ServerInfo::has_is_hltv)
	.def("is_hltv", &CSVCMsg_ServerInfo::is_hltv)
	.def("clear_is_hltv", &CSVCMsg_ServerInfo::clear_is_hltv)
	.def("has_is_replay", &CSVCMsg_ServerInfo::has_is_replay)
	.def("is_replay", &CSVCMsg_ServerInfo::is_replay)
	.def("clear_is_replay", &CSVCMsg_ServerInfo::clear_is_replay)
	.def("has_c_os", &CSVCMsg_ServerInfo::has_c_os)
	.def("c_os", &CSVCMsg_ServerInfo::c_os)
	.def("clear_c_os", &CSVCMsg_ServerInfo::clear_c_os)
	.def("has_map_crc", &CSVCMsg_ServerInfo::has_map_crc)
	.def("map_crc", &CSVCMsg_ServerInfo::map_crc)
	.def("clear_map_crc", &CSVCMsg_ServerInfo::clear_map_crc)
	.def("has_client_crc", &CSVCMsg_ServerInfo::has_client_crc)
	.def("client_crc", &CSVCMsg_ServerInfo::client_crc)
	.def("clear_client_crc", &CSVCMsg_ServerInfo::clear_client_crc)
	.def("has_string_table_crc", &CSVCMsg_ServerInfo::has_string_table_crc)
	.def("string_table_crc", &CSVCMsg_ServerInfo::string_table_crc)
	.def("clear_string_table_crc", &CSVCMsg_ServerInfo::clear_string_table_crc)
	.def("has_max_clients", &CSVCMsg_ServerInfo::has_max_clients)
	.def("max_clients", &CSVCMsg_ServerInfo::max_clients)
	.def("clear_max_clients", &CSVCMsg_ServerInfo::clear_max_clients)
	.def("has_max_classes", &CSVCMsg_ServerInfo::has_max_classes)
	.def("max_classes", &CSVCMsg_ServerInfo::max_classes)
	.def("clear_max_classes", &CSVCMsg_ServerInfo::clear_max_classes)
	.def("has_player_slot", &CSVCMsg_ServerInfo::has_player_slot)
	.def("player_slot", &CSVCMsg_ServerInfo::player_slot)
	.def("clear_player_slot", &CSVCMsg_ServerInfo::clear_player_slot)
	.def("has_tick_interval", &CSVCMsg_ServerInfo::has_tick_interval)
	.def("tick_interval", &CSVCMsg_ServerInfo::tick_interval)
	.def("clear_tick_interval", &CSVCMsg_ServerInfo::clear_tick_interval)
	.def("has_game_dir", &CSVCMsg_ServerInfo::has_game_dir)
	.def("game_dir", &CSVCMsg_ServerInfo::game_dir, return_value_policy<copy_const_reference>())
	.def("clear_game_dir", &CSVCMsg_ServerInfo::clear_game_dir)
	.def("has_map_name", &CSVCMsg_ServerInfo::has_map_name)
	.def("map_name", &CSVCMsg_ServerInfo::map_name, return_value_policy<copy_const_reference>())
	.def("clear_map_name", &CSVCMsg_ServerInfo::clear_map_name)
	.def("has_sky_name", &CSVCMsg_ServerInfo::has_sky_name)
	.def("sky_name", &CSVCMsg_ServerInfo::sky_name, return_value_policy<copy_const_reference>())
	.def("clear_sky_name", &CSVCMsg_ServerInfo::clear_sky_name)
	.def("has_host_name", &CSVCMsg_ServerInfo::has_host_name)
	.def("host_name", &CSVCMsg_ServerInfo::host_name, return_value_policy<copy_const_reference>())
	.def("clear_host_name", &CSVCMsg_ServerInfo::clear_host_name)
	.def("has_addon_name", &CSVCMsg_ServerInfo::has_addon_name)
	.def("addon_name", &CSVCMsg_ServerInfo::addon_name, return_value_policy<copy_const_reference>())
	.def("clear_addon_name", &CSVCMsg_ServerInfo::clear_addon_name)
;

class_<CSVCMsg_ClassInfo_class_t>("CSVCMsg_ClassInfo_class_t")
	.def("has_class_id", &CSVCMsg_ClassInfo_class_t::has_class_id)
	.def("class_id", &CSVCMsg_ClassInfo_class_t::class_id)
	.def("clear_class_id", &CSVCMsg_ClassInfo_class_t::clear_class_id)
	.def("has_data_table_name", &CSVCMsg_ClassInfo_class_t::has_data_table_name)
	.def("data_table_name", &CSVCMsg_ClassInfo_class_t::data_table_name, return_value_policy<copy_const_reference>())
	.def("clear_data_table_name", &CSVCMsg_ClassInfo_class_t::clear_data_table_name)
	.def("has_class_name", &CSVCMsg_ClassInfo_class_t::has_class_name)
	.def("class_name", &CSVCMsg_ClassInfo_class_t::class_name, return_value_policy<copy_const_reference>())
	.def("clear_class_name", &CSVCMsg_ClassInfo_class_t::clear_class_name)
;

class_<CSVCMsg_ClassInfo>("CSVCMsg_ClassInfo")
	.def("has_create_on_client", &CSVCMsg_ClassInfo::has_create_on_client)
	.def("create_on_client", &CSVCMsg_ClassInfo::create_on_client)
	.def("clear_create_on_client", &CSVCMsg_ClassInfo::clear_create_on_client)
	.def("classes_size", &CSVCMsg_ClassInfo::classes_size)
	.def("clear_classes", &CSVCMsg_ClassInfo::clear_classes)
;

class_<CSVCMsg_SetPause>("CSVCMsg_SetPause")
	.def("has_paused", &CSVCMsg_SetPause::has_paused)
	.def("paused", &CSVCMsg_SetPause::paused)
	.def("clear_paused", &CSVCMsg_SetPause::clear_paused)
;

class_<CSVCMsg_VoiceInit>("CSVCMsg_VoiceInit")
	.def("has_quality", &CSVCMsg_VoiceInit::has_quality)
	.def("quality", &CSVCMsg_VoiceInit::quality)
	.def("clear_quality", &CSVCMsg_VoiceInit::clear_quality)
	.def("has_codec", &CSVCMsg_VoiceInit::has_codec)
	.def("codec", &CSVCMsg_VoiceInit::codec, return_value_policy<copy_const_reference>())
	.def("clear_codec", &CSVCMsg_VoiceInit::clear_codec)
	.def("has_version", &CSVCMsg_VoiceInit::has_version)
	.def("version", &CSVCMsg_VoiceInit::version)
	.def("clear_version", &CSVCMsg_VoiceInit::clear_version)
;

class_<CSVCMsg_Print>("CSVCMsg_Print")
	.def("has_text", &CSVCMsg_Print::has_text)
	.def("text", &CSVCMsg_Print::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CSVCMsg_Print::clear_text)
;

class_<CSVCMsg_Sounds_sounddata_t>("CSVCMsg_Sounds_sounddata_t")
	.def("has_origin_x", &CSVCMsg_Sounds_sounddata_t::has_origin_x)
	.def("origin_x", &CSVCMsg_Sounds_sounddata_t::origin_x)
	.def("clear_origin_x", &CSVCMsg_Sounds_sounddata_t::clear_origin_x)
	.def("has_origin_y", &CSVCMsg_Sounds_sounddata_t::has_origin_y)
	.def("origin_y", &CSVCMsg_Sounds_sounddata_t::origin_y)
	.def("clear_origin_y", &CSVCMsg_Sounds_sounddata_t::clear_origin_y)
	.def("has_origin_z", &CSVCMsg_Sounds_sounddata_t::has_origin_z)
	.def("origin_z", &CSVCMsg_Sounds_sounddata_t::origin_z)
	.def("clear_origin_z", &CSVCMsg_Sounds_sounddata_t::clear_origin_z)
	.def("has_volume", &CSVCMsg_Sounds_sounddata_t::has_volume)
	.def("volume", &CSVCMsg_Sounds_sounddata_t::volume)
	.def("clear_volume", &CSVCMsg_Sounds_sounddata_t::clear_volume)
	.def("has_delay_value", &CSVCMsg_Sounds_sounddata_t::has_delay_value)
	.def("delay_value", &CSVCMsg_Sounds_sounddata_t::delay_value)
	.def("clear_delay_value", &CSVCMsg_Sounds_sounddata_t::clear_delay_value)
	.def("has_sequence_number", &CSVCMsg_Sounds_sounddata_t::has_sequence_number)
	.def("sequence_number", &CSVCMsg_Sounds_sounddata_t::sequence_number)
	.def("clear_sequence_number", &CSVCMsg_Sounds_sounddata_t::clear_sequence_number)
	.def("has_entity_index", &CSVCMsg_Sounds_sounddata_t::has_entity_index)
	.def("entity_index", &CSVCMsg_Sounds_sounddata_t::entity_index)
	.def("clear_entity_index", &CSVCMsg_Sounds_sounddata_t::clear_entity_index)
	.def("has_channel", &CSVCMsg_Sounds_sounddata_t::has_channel)
	.def("channel", &CSVCMsg_Sounds_sounddata_t::channel)
	.def("clear_channel", &CSVCMsg_Sounds_sounddata_t::clear_channel)
	.def("has_pitch", &CSVCMsg_Sounds_sounddata_t::has_pitch)
	.def("pitch", &CSVCMsg_Sounds_sounddata_t::pitch)
	.def("clear_pitch", &CSVCMsg_Sounds_sounddata_t::clear_pitch)
	.def("has_flags", &CSVCMsg_Sounds_sounddata_t::has_flags)
	.def("flags", &CSVCMsg_Sounds_sounddata_t::flags)
	.def("clear_flags", &CSVCMsg_Sounds_sounddata_t::clear_flags)
	.def("has_sound_num", &CSVCMsg_Sounds_sounddata_t::has_sound_num)
	.def("sound_num", &CSVCMsg_Sounds_sounddata_t::sound_num)
	.def("clear_sound_num", &CSVCMsg_Sounds_sounddata_t::clear_sound_num)
	.def("has_sound_num_handle", &CSVCMsg_Sounds_sounddata_t::has_sound_num_handle)
	.def("sound_num_handle", &CSVCMsg_Sounds_sounddata_t::sound_num_handle)
	.def("clear_sound_num_handle", &CSVCMsg_Sounds_sounddata_t::clear_sound_num_handle)
	.def("has_speaker_entity", &CSVCMsg_Sounds_sounddata_t::has_speaker_entity)
	.def("speaker_entity", &CSVCMsg_Sounds_sounddata_t::speaker_entity)
	.def("clear_speaker_entity", &CSVCMsg_Sounds_sounddata_t::clear_speaker_entity)
	.def("has_random_seed", &CSVCMsg_Sounds_sounddata_t::has_random_seed)
	.def("random_seed", &CSVCMsg_Sounds_sounddata_t::random_seed)
	.def("clear_random_seed", &CSVCMsg_Sounds_sounddata_t::clear_random_seed)
	.def("has_sound_level", &CSVCMsg_Sounds_sounddata_t::has_sound_level)
	.def("sound_level", &CSVCMsg_Sounds_sounddata_t::sound_level)
	.def("clear_sound_level", &CSVCMsg_Sounds_sounddata_t::clear_sound_level)
	.def("has_is_sentence", &CSVCMsg_Sounds_sounddata_t::has_is_sentence)
	.def("is_sentence", &CSVCMsg_Sounds_sounddata_t::is_sentence)
	.def("clear_is_sentence", &CSVCMsg_Sounds_sounddata_t::clear_is_sentence)
	.def("has_is_ambient", &CSVCMsg_Sounds_sounddata_t::has_is_ambient)
	.def("is_ambient", &CSVCMsg_Sounds_sounddata_t::is_ambient)
	.def("clear_is_ambient", &CSVCMsg_Sounds_sounddata_t::clear_is_ambient)
;

class_<CSVCMsg_Sounds>("CSVCMsg_Sounds")
	.def("has_reliable_sound", &CSVCMsg_Sounds::has_reliable_sound)
	.def("reliable_sound", &CSVCMsg_Sounds::reliable_sound)
	.def("clear_reliable_sound", &CSVCMsg_Sounds::clear_reliable_sound)
	.def("sounds_size", &CSVCMsg_Sounds::sounds_size)
	.def("clear_sounds", &CSVCMsg_Sounds::clear_sounds)
;

class_<CSVCMsg_Prefetch>("CSVCMsg_Prefetch")
	.def("has_sound_index", &CSVCMsg_Prefetch::has_sound_index)
	.def("sound_index", &CSVCMsg_Prefetch::sound_index)
	.def("clear_sound_index", &CSVCMsg_Prefetch::clear_sound_index)
;

class_<CSVCMsg_SetView>("CSVCMsg_SetView")
	.def("has_entity_index", &CSVCMsg_SetView::has_entity_index)
	.def("entity_index", &CSVCMsg_SetView::entity_index)
	.def("clear_entity_index", &CSVCMsg_SetView::clear_entity_index)
;

class_<CSVCMsg_FixAngle>("CSVCMsg_FixAngle")
	.def("has_relative", &CSVCMsg_FixAngle::has_relative)
	.def("relative", &CSVCMsg_FixAngle::relative)
	.def("clear_relative", &CSVCMsg_FixAngle::clear_relative)
	.def("has_angle", &CSVCMsg_FixAngle::has_angle)
	.def("angle", &CSVCMsg_FixAngle::angle, return_value_policy<reference_existing_object>())
	.def("clear_angle", &CSVCMsg_FixAngle::clear_angle)
;

class_<CSVCMsg_CrosshairAngle>("CSVCMsg_CrosshairAngle")
	.def("has_angle", &CSVCMsg_CrosshairAngle::has_angle)
	.def("angle", &CSVCMsg_CrosshairAngle::angle, return_value_policy<reference_existing_object>())
	.def("clear_angle", &CSVCMsg_CrosshairAngle::clear_angle)
;

class_<CSVCMsg_BSPDecal>("CSVCMsg_BSPDecal")
	.def("has_pos", &CSVCMsg_BSPDecal::has_pos)
	.def("pos", &CSVCMsg_BSPDecal::pos, return_value_policy<reference_existing_object>())
	.def("clear_pos", &CSVCMsg_BSPDecal::clear_pos)
	.def("has_decal_texture_index", &CSVCMsg_BSPDecal::has_decal_texture_index)
	.def("decal_texture_index", &CSVCMsg_BSPDecal::decal_texture_index)
	.def("clear_decal_texture_index", &CSVCMsg_BSPDecal::clear_decal_texture_index)
	.def("has_entity_index", &CSVCMsg_BSPDecal::has_entity_index)
	.def("entity_index", &CSVCMsg_BSPDecal::entity_index)
	.def("clear_entity_index", &CSVCMsg_BSPDecal::clear_entity_index)
	.def("has_model_index", &CSVCMsg_BSPDecal::has_model_index)
	.def("model_index", &CSVCMsg_BSPDecal::model_index)
	.def("clear_model_index", &CSVCMsg_BSPDecal::clear_model_index)
	.def("has_low_priority", &CSVCMsg_BSPDecal::has_low_priority)
	.def("low_priority", &CSVCMsg_BSPDecal::low_priority)
	.def("clear_low_priority", &CSVCMsg_BSPDecal::clear_low_priority)
;

class_<CSVCMsg_SplitScreen>("CSVCMsg_SplitScreen")
	.def("has_type", &CSVCMsg_SplitScreen::has_type)
	.def("type", &CSVCMsg_SplitScreen::type)
	.def("clear_type", &CSVCMsg_SplitScreen::clear_type)
	.def("has_slot", &CSVCMsg_SplitScreen::has_slot)
	.def("slot", &CSVCMsg_SplitScreen::slot)
	.def("clear_slot", &CSVCMsg_SplitScreen::clear_slot)
	.def("has_player_index", &CSVCMsg_SplitScreen::has_player_index)
	.def("player_index", &CSVCMsg_SplitScreen::player_index)
	.def("clear_player_index", &CSVCMsg_SplitScreen::clear_player_index)
;

class_<CSVCMsg_GetCvarValue>("CSVCMsg_GetCvarValue")
	.def("has_cookie", &CSVCMsg_GetCvarValue::has_cookie)
	.def("cookie", &CSVCMsg_GetCvarValue::cookie)
	.def("clear_cookie", &CSVCMsg_GetCvarValue::clear_cookie)
	.def("has_cvar_name", &CSVCMsg_GetCvarValue::has_cvar_name)
	.def("cvar_name", &CSVCMsg_GetCvarValue::cvar_name, return_value_policy<copy_const_reference>())
	.def("clear_cvar_name", &CSVCMsg_GetCvarValue::clear_cvar_name)
;

class_<CSVCMsg_Menu>("CSVCMsg_Menu")
	.def("has_dialog_type", &CSVCMsg_Menu::has_dialog_type)
	.def("dialog_type", &CSVCMsg_Menu::dialog_type)
	.def("clear_dialog_type", &CSVCMsg_Menu::clear_dialog_type)
	.def("has_menu_key_values", &CSVCMsg_Menu::has_menu_key_values)
	.def("menu_key_values", &CSVCMsg_Menu::menu_key_values, return_value_policy<reference_existing_object>())
	.def("clear_menu_key_values", &CSVCMsg_Menu::clear_menu_key_values)
;

class_<CSVCMsg_SendTable_sendprop_t>("CSVCMsg_SendTable_sendprop_t")
	.def("has_type", &CSVCMsg_SendTable_sendprop_t::has_type)
	.def("type", &CSVCMsg_SendTable_sendprop_t::type)
	.def("clear_type", &CSVCMsg_SendTable_sendprop_t::clear_type)
	.def("has_var_name", &CSVCMsg_SendTable_sendprop_t::has_var_name)
	.def("var_name", &CSVCMsg_SendTable_sendprop_t::var_name, return_value_policy<copy_const_reference>())
	.def("clear_var_name", &CSVCMsg_SendTable_sendprop_t::clear_var_name)
	.def("has_flags", &CSVCMsg_SendTable_sendprop_t::has_flags)
	.def("flags", &CSVCMsg_SendTable_sendprop_t::flags)
	.def("clear_flags", &CSVCMsg_SendTable_sendprop_t::clear_flags)
	.def("has_priority", &CSVCMsg_SendTable_sendprop_t::has_priority)
	.def("priority", &CSVCMsg_SendTable_sendprop_t::priority)
	.def("clear_priority", &CSVCMsg_SendTable_sendprop_t::clear_priority)
	.def("has_dt_name", &CSVCMsg_SendTable_sendprop_t::has_dt_name)
	.def("dt_name", &CSVCMsg_SendTable_sendprop_t::dt_name, return_value_policy<copy_const_reference>())
	.def("clear_dt_name", &CSVCMsg_SendTable_sendprop_t::clear_dt_name)
	.def("has_num_elements", &CSVCMsg_SendTable_sendprop_t::has_num_elements)
	.def("num_elements", &CSVCMsg_SendTable_sendprop_t::num_elements)
	.def("clear_num_elements", &CSVCMsg_SendTable_sendprop_t::clear_num_elements)
	.def("has_low_value", &CSVCMsg_SendTable_sendprop_t::has_low_value)
	.def("low_value", &CSVCMsg_SendTable_sendprop_t::low_value)
	.def("clear_low_value", &CSVCMsg_SendTable_sendprop_t::clear_low_value)
	.def("has_high_value", &CSVCMsg_SendTable_sendprop_t::has_high_value)
	.def("high_value", &CSVCMsg_SendTable_sendprop_t::high_value)
	.def("clear_high_value", &CSVCMsg_SendTable_sendprop_t::clear_high_value)
	.def("has_num_bits", &CSVCMsg_SendTable_sendprop_t::has_num_bits)
	.def("num_bits", &CSVCMsg_SendTable_sendprop_t::num_bits)
	.def("clear_num_bits", &CSVCMsg_SendTable_sendprop_t::clear_num_bits)
;

class_<CSVCMsg_SendTable>("CSVCMsg_SendTable")
	.def("has_is_end", &CSVCMsg_SendTable::has_is_end)
	.def("is_end", &CSVCMsg_SendTable::is_end)
	.def("clear_is_end", &CSVCMsg_SendTable::clear_is_end)
	.def("has_net_table_name", &CSVCMsg_SendTable::has_net_table_name)
	.def("net_table_name", &CSVCMsg_SendTable::net_table_name, return_value_policy<copy_const_reference>())
	.def("clear_net_table_name", &CSVCMsg_SendTable::clear_net_table_name)
	.def("has_needs_decoder", &CSVCMsg_SendTable::has_needs_decoder)
	.def("needs_decoder", &CSVCMsg_SendTable::needs_decoder)
	.def("clear_needs_decoder", &CSVCMsg_SendTable::clear_needs_decoder)
	.def("props_size", &CSVCMsg_SendTable::props_size)
	.def("clear_props", &CSVCMsg_SendTable::clear_props)
;

class_<CSVCMsg_GameEventList_key_t>("CSVCMsg_GameEventList_key_t")
	.def("has_type", &CSVCMsg_GameEventList_key_t::has_type)
	.def("type", &CSVCMsg_GameEventList_key_t::type)
	.def("clear_type", &CSVCMsg_GameEventList_key_t::clear_type)
	.def("has_name", &CSVCMsg_GameEventList_key_t::has_name)
	.def("name", &CSVCMsg_GameEventList_key_t::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CSVCMsg_GameEventList_key_t::clear_name)
;

class_<CSVCMsg_GameEventList_descriptor_t>("CSVCMsg_GameEventList_descriptor_t")
	.def("has_eventid", &CSVCMsg_GameEventList_descriptor_t::has_eventid)
	.def("eventid", &CSVCMsg_GameEventList_descriptor_t::eventid)
	.def("clear_eventid", &CSVCMsg_GameEventList_descriptor_t::clear_eventid)
	.def("has_name", &CSVCMsg_GameEventList_descriptor_t::has_name)
	.def("name", &CSVCMsg_GameEventList_descriptor_t::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CSVCMsg_GameEventList_descriptor_t::clear_name)
	.def("keys_size", &CSVCMsg_GameEventList_descriptor_t::keys_size)
	.def("clear_keys", &CSVCMsg_GameEventList_descriptor_t::clear_keys)
;

class_<CSVCMsg_GameEventList>("CSVCMsg_GameEventList")
	.def("descriptors_size", &CSVCMsg_GameEventList::descriptors_size)
	.def("clear_descriptors", &CSVCMsg_GameEventList::clear_descriptors)
;

class_<CSVCMsg_PacketEntities>("CSVCMsg_PacketEntities")
	.def("has_max_entries", &CSVCMsg_PacketEntities::has_max_entries)
	.def("max_entries", &CSVCMsg_PacketEntities::max_entries)
	.def("clear_max_entries", &CSVCMsg_PacketEntities::clear_max_entries)
	.def("has_updated_entries", &CSVCMsg_PacketEntities::has_updated_entries)
	.def("updated_entries", &CSVCMsg_PacketEntities::updated_entries)
	.def("clear_updated_entries", &CSVCMsg_PacketEntities::clear_updated_entries)
	.def("has_is_delta", &CSVCMsg_PacketEntities::has_is_delta)
	.def("is_delta", &CSVCMsg_PacketEntities::is_delta)
	.def("clear_is_delta", &CSVCMsg_PacketEntities::clear_is_delta)
	.def("has_update_baseline", &CSVCMsg_PacketEntities::has_update_baseline)
	.def("update_baseline", &CSVCMsg_PacketEntities::update_baseline)
	.def("clear_update_baseline", &CSVCMsg_PacketEntities::clear_update_baseline)
	.def("has_baseline", &CSVCMsg_PacketEntities::has_baseline)
	.def("baseline", &CSVCMsg_PacketEntities::baseline)
	.def("clear_baseline", &CSVCMsg_PacketEntities::clear_baseline)
	.def("has_delta_from", &CSVCMsg_PacketEntities::has_delta_from)
	.def("delta_from", &CSVCMsg_PacketEntities::delta_from)
	.def("clear_delta_from", &CSVCMsg_PacketEntities::clear_delta_from)
	.def("has_entity_data", &CSVCMsg_PacketEntities::has_entity_data)
	.def("entity_data", &CSVCMsg_PacketEntities::entity_data, return_value_policy<reference_existing_object>())
	.def("clear_entity_data", &CSVCMsg_PacketEntities::clear_entity_data)
;

class_<CSVCMsg_TempEntities>("CSVCMsg_TempEntities")
	.def("has_reliable", &CSVCMsg_TempEntities::has_reliable)
	.def("reliable", &CSVCMsg_TempEntities::reliable)
	.def("clear_reliable", &CSVCMsg_TempEntities::clear_reliable)
	.def("has_num_entries", &CSVCMsg_TempEntities::has_num_entries)
	.def("num_entries", &CSVCMsg_TempEntities::num_entries)
	.def("clear_num_entries", &CSVCMsg_TempEntities::clear_num_entries)
	.def("has_entity_data", &CSVCMsg_TempEntities::has_entity_data)
	.def("entity_data", &CSVCMsg_TempEntities::entity_data, return_value_policy<reference_existing_object>())
	.def("clear_entity_data", &CSVCMsg_TempEntities::clear_entity_data)
;

class_<CSVCMsg_CreateStringTable>("CSVCMsg_CreateStringTable")
	.def("has_name", &CSVCMsg_CreateStringTable::has_name)
	.def("name", &CSVCMsg_CreateStringTable::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CSVCMsg_CreateStringTable::clear_name)
	.def("has_max_entries", &CSVCMsg_CreateStringTable::has_max_entries)
	.def("max_entries", &CSVCMsg_CreateStringTable::max_entries)
	.def("clear_max_entries", &CSVCMsg_CreateStringTable::clear_max_entries)
	.def("has_num_entries", &CSVCMsg_CreateStringTable::has_num_entries)
	.def("num_entries", &CSVCMsg_CreateStringTable::num_entries)
	.def("clear_num_entries", &CSVCMsg_CreateStringTable::clear_num_entries)
	.def("has_user_data_fixed_size", &CSVCMsg_CreateStringTable::has_user_data_fixed_size)
	.def("user_data_fixed_size", &CSVCMsg_CreateStringTable::user_data_fixed_size)
	.def("clear_user_data_fixed_size", &CSVCMsg_CreateStringTable::clear_user_data_fixed_size)
	.def("has_user_data_size", &CSVCMsg_CreateStringTable::has_user_data_size)
	.def("user_data_size", &CSVCMsg_CreateStringTable::user_data_size)
	.def("clear_user_data_size", &CSVCMsg_CreateStringTable::clear_user_data_size)
	.def("has_user_data_size_bits", &CSVCMsg_CreateStringTable::has_user_data_size_bits)
	.def("user_data_size_bits", &CSVCMsg_CreateStringTable::user_data_size_bits)
	.def("clear_user_data_size_bits", &CSVCMsg_CreateStringTable::clear_user_data_size_bits)
	.def("has_flags", &CSVCMsg_CreateStringTable::has_flags)
	.def("flags", &CSVCMsg_CreateStringTable::flags)
	.def("clear_flags", &CSVCMsg_CreateStringTable::clear_flags)
	.def("has_string_data", &CSVCMsg_CreateStringTable::has_string_data)
	.def("string_data", &CSVCMsg_CreateStringTable::string_data, return_value_policy<reference_existing_object>())
	.def("clear_string_data", &CSVCMsg_CreateStringTable::clear_string_data)
;

class_<CSVCMsg_UpdateStringTable>("CSVCMsg_UpdateStringTable")
	.def("has_table_id", &CSVCMsg_UpdateStringTable::has_table_id)
	.def("table_id", &CSVCMsg_UpdateStringTable::table_id)
	.def("clear_table_id", &CSVCMsg_UpdateStringTable::clear_table_id)
	.def("has_num_changed_entries", &CSVCMsg_UpdateStringTable::has_num_changed_entries)
	.def("num_changed_entries", &CSVCMsg_UpdateStringTable::num_changed_entries)
	.def("clear_num_changed_entries", &CSVCMsg_UpdateStringTable::clear_num_changed_entries)
	.def("has_string_data", &CSVCMsg_UpdateStringTable::has_string_data)
	.def("string_data", &CSVCMsg_UpdateStringTable::string_data, return_value_policy<reference_existing_object>())
	.def("clear_string_data", &CSVCMsg_UpdateStringTable::clear_string_data)
;

class_<CSVCMsg_VoiceData>("CSVCMsg_VoiceData")
	.def("has_client", &CSVCMsg_VoiceData::has_client)
	.def("client", &CSVCMsg_VoiceData::client)
	.def("clear_client", &CSVCMsg_VoiceData::clear_client)
	.def("has_proximity", &CSVCMsg_VoiceData::has_proximity)
	.def("proximity", &CSVCMsg_VoiceData::proximity)
	.def("clear_proximity", &CSVCMsg_VoiceData::clear_proximity)
	.def("has_xuid", &CSVCMsg_VoiceData::has_xuid)
	.def("xuid", &CSVCMsg_VoiceData::xuid)
	.def("clear_xuid", &CSVCMsg_VoiceData::clear_xuid)
	.def("has_audible_mask", &CSVCMsg_VoiceData::has_audible_mask)
	.def("audible_mask", &CSVCMsg_VoiceData::audible_mask)
	.def("clear_audible_mask", &CSVCMsg_VoiceData::clear_audible_mask)
	.def("has_voice_data", &CSVCMsg_VoiceData::has_voice_data)
	.def("voice_data", &CSVCMsg_VoiceData::voice_data, return_value_policy<reference_existing_object>())
	.def("clear_voice_data", &CSVCMsg_VoiceData::clear_voice_data)
	.def("has_format", &CSVCMsg_VoiceData::has_format)
	.def("format", &CSVCMsg_VoiceData::format)
	.def("clear_format", &CSVCMsg_VoiceData::clear_format)
;

class_<CSVCMsg_PacketReliable>("CSVCMsg_PacketReliable")
	.def("has_tick", &CSVCMsg_PacketReliable::has_tick)
	.def("tick", &CSVCMsg_PacketReliable::tick)
	.def("clear_tick", &CSVCMsg_PacketReliable::clear_tick)
	.def("has_messagessize", &CSVCMsg_PacketReliable::has_messagessize)
	.def("messagessize", &CSVCMsg_PacketReliable::messagessize)
	.def("clear_messagessize", &CSVCMsg_PacketReliable::clear_messagessize)
;

#endif // PROTOBUF_netmessages.proto_BOOST_PYTHON_INCLUDED
