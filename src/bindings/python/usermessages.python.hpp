// Generated by the protocol buffer compiler. DO NOT EDIT!
// Source: usermessages

#ifndef PROTOBUF_usermessages_BOOST_PYTHON_INCLUDED
#define PROTOBUF_usermessages_BOOST_PYTHON_INCLUDED

class_<CUserMsg_AchievementEvent>("CUserMsg_AchievementEvent")
	.def("has_achievement", &CUserMsg_AchievementEvent::has_achievement)
	.def("achievement", &CUserMsg_AchievementEvent::achievement)
	.def("clear_achievement", &CUserMsg_AchievementEvent::clear_achievement)
;

class_<CUserMsg_CloseCaption>("CUserMsg_CloseCaption")
	.def("has_hash", &CUserMsg_CloseCaption::has_hash)
	.def("hash", &CUserMsg_CloseCaption::hash)
	.def("clear_hash", &CUserMsg_CloseCaption::clear_hash)
	.def("has_duration", &CUserMsg_CloseCaption::has_duration)
	.def("duration", &CUserMsg_CloseCaption::duration)
	.def("clear_duration", &CUserMsg_CloseCaption::clear_duration)
	.def("has_from_player", &CUserMsg_CloseCaption::has_from_player)
	.def("from_player", &CUserMsg_CloseCaption::from_player)
	.def("clear_from_player", &CUserMsg_CloseCaption::clear_from_player)
	.def("has_ent_index", &CUserMsg_CloseCaption::has_ent_index)
	.def("ent_index", &CUserMsg_CloseCaption::ent_index)
	.def("clear_ent_index", &CUserMsg_CloseCaption::clear_ent_index)
;

class_<CUserMsg_CurrentTimescale>("CUserMsg_CurrentTimescale")
	.def("has_current", &CUserMsg_CurrentTimescale::has_current)
	.def("current", &CUserMsg_CurrentTimescale::current)
	.def("clear_current", &CUserMsg_CurrentTimescale::clear_current)
;

class_<CUserMsg_DesiredTimescale>("CUserMsg_DesiredTimescale")
	.def("has_desired", &CUserMsg_DesiredTimescale::has_desired)
	.def("desired", &CUserMsg_DesiredTimescale::desired)
	.def("clear_desired", &CUserMsg_DesiredTimescale::clear_desired)
	.def("has_duration", &CUserMsg_DesiredTimescale::has_duration)
	.def("duration", &CUserMsg_DesiredTimescale::duration)
	.def("clear_duration", &CUserMsg_DesiredTimescale::clear_duration)
	.def("has_interpolator", &CUserMsg_DesiredTimescale::has_interpolator)
	.def("interpolator", &CUserMsg_DesiredTimescale::interpolator)
	.def("clear_interpolator", &CUserMsg_DesiredTimescale::clear_interpolator)
	.def("has_start_blend_time", &CUserMsg_DesiredTimescale::has_start_blend_time)
	.def("start_blend_time", &CUserMsg_DesiredTimescale::start_blend_time)
	.def("clear_start_blend_time", &CUserMsg_DesiredTimescale::clear_start_blend_time)
;

class_<CUserMsg_Fade>("CUserMsg_Fade")
	.def("has_duration", &CUserMsg_Fade::has_duration)
	.def("duration", &CUserMsg_Fade::duration)
	.def("clear_duration", &CUserMsg_Fade::clear_duration)
	.def("has_hold_time", &CUserMsg_Fade::has_hold_time)
	.def("hold_time", &CUserMsg_Fade::hold_time)
	.def("clear_hold_time", &CUserMsg_Fade::clear_hold_time)
	.def("has_flags", &CUserMsg_Fade::has_flags)
	.def("flags", &CUserMsg_Fade::flags)
	.def("clear_flags", &CUserMsg_Fade::clear_flags)
	.def("has_color", &CUserMsg_Fade::has_color)
	.def("color", &CUserMsg_Fade::color)
	.def("clear_color", &CUserMsg_Fade::clear_color)
;

class_<CUserMsg_Shake>("CUserMsg_Shake")
	.def("has_command", &CUserMsg_Shake::has_command)
	.def("command", &CUserMsg_Shake::command)
	.def("clear_command", &CUserMsg_Shake::clear_command)
	.def("has_amplitude", &CUserMsg_Shake::has_amplitude)
	.def("amplitude", &CUserMsg_Shake::amplitude)
	.def("clear_amplitude", &CUserMsg_Shake::clear_amplitude)
	.def("has_frequency", &CUserMsg_Shake::has_frequency)
	.def("frequency", &CUserMsg_Shake::frequency)
	.def("clear_frequency", &CUserMsg_Shake::clear_frequency)
	.def("has_duration", &CUserMsg_Shake::has_duration)
	.def("duration", &CUserMsg_Shake::duration)
	.def("clear_duration", &CUserMsg_Shake::clear_duration)
;

class_<CUserMsg_ShakeDir>("CUserMsg_ShakeDir")
	.def("has_shake", &CUserMsg_ShakeDir::has_shake)
	.def("shake", &CUserMsg_ShakeDir::shake, return_value_policy<reference_existing_object>())
	.def("clear_shake", &CUserMsg_ShakeDir::clear_shake)
	.def("has_direction", &CUserMsg_ShakeDir::has_direction)
	.def("direction", &CUserMsg_ShakeDir::direction, return_value_policy<reference_existing_object>())
	.def("clear_direction", &CUserMsg_ShakeDir::clear_direction)
;

class_<CUserMsg_Tilt>("CUserMsg_Tilt")
	.def("has_command", &CUserMsg_Tilt::has_command)
	.def("command", &CUserMsg_Tilt::command)
	.def("clear_command", &CUserMsg_Tilt::clear_command)
	.def("has_ease_in_out", &CUserMsg_Tilt::has_ease_in_out)
	.def("ease_in_out", &CUserMsg_Tilt::ease_in_out)
	.def("clear_ease_in_out", &CUserMsg_Tilt::clear_ease_in_out)
	.def("has_angle", &CUserMsg_Tilt::has_angle)
	.def("angle", &CUserMsg_Tilt::angle, return_value_policy<reference_existing_object>())
	.def("clear_angle", &CUserMsg_Tilt::clear_angle)
	.def("has_duration", &CUserMsg_Tilt::has_duration)
	.def("duration", &CUserMsg_Tilt::duration)
	.def("clear_duration", &CUserMsg_Tilt::clear_duration)
	.def("has_time", &CUserMsg_Tilt::has_time)
	.def("time", &CUserMsg_Tilt::time)
	.def("clear_time", &CUserMsg_Tilt::clear_time)
;

class_<CUserMsg_SayText>("CUserMsg_SayText")
	.def("has_client", &CUserMsg_SayText::has_client)
	.def("client", &CUserMsg_SayText::client)
	.def("clear_client", &CUserMsg_SayText::clear_client)
	.def("has_text", &CUserMsg_SayText::has_text)
	.def("text", &CUserMsg_SayText::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CUserMsg_SayText::clear_text)
	.def("has_chat", &CUserMsg_SayText::has_chat)
	.def("chat", &CUserMsg_SayText::chat)
	.def("clear_chat", &CUserMsg_SayText::clear_chat)
;

class_<CUserMsg_SayText2>("CUserMsg_SayText2")
	.def("has_client", &CUserMsg_SayText2::has_client)
	.def("client", &CUserMsg_SayText2::client)
	.def("clear_client", &CUserMsg_SayText2::clear_client)
	.def("has_chat", &CUserMsg_SayText2::has_chat)
	.def("chat", &CUserMsg_SayText2::chat)
	.def("clear_chat", &CUserMsg_SayText2::clear_chat)
	.def("has_format", &CUserMsg_SayText2::has_format)
	.def("format", &CUserMsg_SayText2::format, return_value_policy<copy_const_reference>())
	.def("clear_format", &CUserMsg_SayText2::clear_format)
	.def("has_prefix", &CUserMsg_SayText2::has_prefix)
	.def("prefix", &CUserMsg_SayText2::prefix, return_value_policy<copy_const_reference>())
	.def("clear_prefix", &CUserMsg_SayText2::clear_prefix)
	.def("has_text", &CUserMsg_SayText2::has_text)
	.def("text", &CUserMsg_SayText2::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CUserMsg_SayText2::clear_text)
	.def("has_location", &CUserMsg_SayText2::has_location)
	.def("location", &CUserMsg_SayText2::location, return_value_policy<copy_const_reference>())
	.def("clear_location", &CUserMsg_SayText2::clear_location)
;

class_<CUserMsg_HudMsg>("CUserMsg_HudMsg")
	.def("has_channel", &CUserMsg_HudMsg::has_channel)
	.def("channel", &CUserMsg_HudMsg::channel)
	.def("clear_channel", &CUserMsg_HudMsg::clear_channel)
	.def("has_x", &CUserMsg_HudMsg::has_x)
	.def("x", &CUserMsg_HudMsg::x)
	.def("clear_x", &CUserMsg_HudMsg::clear_x)
	.def("has_y", &CUserMsg_HudMsg::has_y)
	.def("y", &CUserMsg_HudMsg::y)
	.def("clear_y", &CUserMsg_HudMsg::clear_y)
	.def("has_color1", &CUserMsg_HudMsg::has_color1)
	.def("color1", &CUserMsg_HudMsg::color1)
	.def("clear_color1", &CUserMsg_HudMsg::clear_color1)
	.def("has_color2", &CUserMsg_HudMsg::has_color2)
	.def("color2", &CUserMsg_HudMsg::color2)
	.def("clear_color2", &CUserMsg_HudMsg::clear_color2)
	.def("has_effect", &CUserMsg_HudMsg::has_effect)
	.def("effect", &CUserMsg_HudMsg::effect)
	.def("clear_effect", &CUserMsg_HudMsg::clear_effect)
	.def("has_fade_in_time", &CUserMsg_HudMsg::has_fade_in_time)
	.def("fade_in_time", &CUserMsg_HudMsg::fade_in_time)
	.def("clear_fade_in_time", &CUserMsg_HudMsg::clear_fade_in_time)
	.def("has_fade_out_time", &CUserMsg_HudMsg::has_fade_out_time)
	.def("fade_out_time", &CUserMsg_HudMsg::fade_out_time)
	.def("clear_fade_out_time", &CUserMsg_HudMsg::clear_fade_out_time)
	.def("has_hold_time", &CUserMsg_HudMsg::has_hold_time)
	.def("hold_time", &CUserMsg_HudMsg::hold_time)
	.def("clear_hold_time", &CUserMsg_HudMsg::clear_hold_time)
	.def("has_fx_time", &CUserMsg_HudMsg::has_fx_time)
	.def("fx_time", &CUserMsg_HudMsg::fx_time)
	.def("clear_fx_time", &CUserMsg_HudMsg::clear_fx_time)
	.def("has_message", &CUserMsg_HudMsg::has_message)
	.def("message", &CUserMsg_HudMsg::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CUserMsg_HudMsg::clear_message)
;

class_<CUserMsg_HudText>("CUserMsg_HudText")
	.def("has_message", &CUserMsg_HudText::has_message)
	.def("message", &CUserMsg_HudText::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CUserMsg_HudText::clear_message)
;

class_<CUserMsg_TextMsg>("CUserMsg_TextMsg")
	.def("has_dest", &CUserMsg_TextMsg::has_dest)
	.def("dest", &CUserMsg_TextMsg::dest)
	.def("clear_dest", &CUserMsg_TextMsg::clear_dest)
	.def("param_size", &CUserMsg_TextMsg::param_size)
	.def("clear_param", &CUserMsg_TextMsg::clear_param)
;

class_<CUserMsg_GameTitle>("CUserMsg_GameTitle")
;

class_<CUserMsg_ResetHUD>("CUserMsg_ResetHUD")
;

class_<CUserMsg_SendAudio>("CUserMsg_SendAudio")
	.def("has_stop", &CUserMsg_SendAudio::has_stop)
	.def("stop", &CUserMsg_SendAudio::stop)
	.def("clear_stop", &CUserMsg_SendAudio::clear_stop)
	.def("has_name", &CUserMsg_SendAudio::has_name)
	.def("name", &CUserMsg_SendAudio::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CUserMsg_SendAudio::clear_name)
;

class_<CUserMsg_VoiceMask>("CUserMsg_VoiceMask")
	.def("audible_players_mask_size", &CUserMsg_VoiceMask::audible_players_mask_size)
	.def("clear_audible_players_mask", &CUserMsg_VoiceMask::clear_audible_players_mask)
	.def("has_player_mod_enabled", &CUserMsg_VoiceMask::has_player_mod_enabled)
	.def("player_mod_enabled", &CUserMsg_VoiceMask::player_mod_enabled)
	.def("clear_player_mod_enabled", &CUserMsg_VoiceMask::clear_player_mod_enabled)
;

class_<CUserMsg_RequestState>("CUserMsg_RequestState")
;

class_<CUserMsg_HintText>("CUserMsg_HintText")
	.def("has_message", &CUserMsg_HintText::has_message)
	.def("message", &CUserMsg_HintText::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CUserMsg_HintText::clear_message)
;

class_<CUserMsg_KeyHintText>("CUserMsg_KeyHintText")
	.def("messages_size", &CUserMsg_KeyHintText::messages_size)
	.def("clear_messages", &CUserMsg_KeyHintText::clear_messages)
;

class_<CUserMsg_StatsCrawlMsg>("CUserMsg_StatsCrawlMsg")
;

class_<CUserMsg_StatsSkipState>("CUserMsg_StatsSkipState")
	.def("has_num_skips", &CUserMsg_StatsSkipState::has_num_skips)
	.def("num_skips", &CUserMsg_StatsSkipState::num_skips)
	.def("clear_num_skips", &CUserMsg_StatsSkipState::clear_num_skips)
	.def("has_num_players", &CUserMsg_StatsSkipState::has_num_players)
	.def("num_players", &CUserMsg_StatsSkipState::num_players)
	.def("clear_num_players", &CUserMsg_StatsSkipState::clear_num_players)
;

class_<CUserMsg_VoiceSubtitle>("CUserMsg_VoiceSubtitle")
	.def("has_ent_index", &CUserMsg_VoiceSubtitle::has_ent_index)
	.def("ent_index", &CUserMsg_VoiceSubtitle::ent_index)
	.def("clear_ent_index", &CUserMsg_VoiceSubtitle::clear_ent_index)
	.def("has_menu", &CUserMsg_VoiceSubtitle::has_menu)
	.def("menu", &CUserMsg_VoiceSubtitle::menu)
	.def("clear_menu", &CUserMsg_VoiceSubtitle::clear_menu)
	.def("has_item", &CUserMsg_VoiceSubtitle::has_item)
	.def("item", &CUserMsg_VoiceSubtitle::item)
	.def("clear_item", &CUserMsg_VoiceSubtitle::clear_item)
;

class_<CUserMsg_VGUIMenu_Keys>("CUserMsg_VGUIMenu_Keys")
	.def("has_name", &CUserMsg_VGUIMenu_Keys::has_name)
	.def("name", &CUserMsg_VGUIMenu_Keys::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CUserMsg_VGUIMenu_Keys::clear_name)
	.def("has_value", &CUserMsg_VGUIMenu_Keys::has_value)
	.def("value", &CUserMsg_VGUIMenu_Keys::value, return_value_policy<copy_const_reference>())
	.def("clear_value", &CUserMsg_VGUIMenu_Keys::clear_value)
;

class_<CUserMsg_VGUIMenu>("CUserMsg_VGUIMenu")
	.def("has_name", &CUserMsg_VGUIMenu::has_name)
	.def("name", &CUserMsg_VGUIMenu::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CUserMsg_VGUIMenu::clear_name)
	.def("has_show", &CUserMsg_VGUIMenu::has_show)
	.def("show", &CUserMsg_VGUIMenu::show)
	.def("clear_show", &CUserMsg_VGUIMenu::clear_show)
	.def("keys_size", &CUserMsg_VGUIMenu::keys_size)
	.def("clear_keys", &CUserMsg_VGUIMenu::clear_keys)
;

class_<CUserMsg_Geiger>("CUserMsg_Geiger")
	.def("has_range", &CUserMsg_Geiger::has_range)
	.def("range", &CUserMsg_Geiger::range)
	.def("clear_range", &CUserMsg_Geiger::clear_range)
;

class_<CUserMsg_Rumble>("CUserMsg_Rumble")
	.def("has_index", &CUserMsg_Rumble::has_index)
	.def("index", &CUserMsg_Rumble::index)
	.def("clear_index", &CUserMsg_Rumble::clear_index)
	.def("has_data", &CUserMsg_Rumble::has_data)
	.def("data", &CUserMsg_Rumble::data)
	.def("clear_data", &CUserMsg_Rumble::clear_data)
	.def("has_flags", &CUserMsg_Rumble::has_flags)
	.def("flags", &CUserMsg_Rumble::flags)
	.def("clear_flags", &CUserMsg_Rumble::clear_flags)
;

class_<CUserMsg_Train>("CUserMsg_Train")
	.def("has_train", &CUserMsg_Train::has_train)
	.def("train", &CUserMsg_Train::train)
	.def("clear_train", &CUserMsg_Train::clear_train)
;

class_<CUserMsg_SayTextChannel>("CUserMsg_SayTextChannel")
	.def("has_player", &CUserMsg_SayTextChannel::has_player)
	.def("player", &CUserMsg_SayTextChannel::player)
	.def("clear_player", &CUserMsg_SayTextChannel::clear_player)
	.def("has_channel", &CUserMsg_SayTextChannel::has_channel)
	.def("channel", &CUserMsg_SayTextChannel::channel)
	.def("clear_channel", &CUserMsg_SayTextChannel::clear_channel)
	.def("has_text", &CUserMsg_SayTextChannel::has_text)
	.def("text", &CUserMsg_SayTextChannel::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CUserMsg_SayTextChannel::clear_text)
;

class_<CUserMsg_MessageText>("CUserMsg_MessageText")
	.def("has_color", &CUserMsg_MessageText::has_color)
	.def("color", &CUserMsg_MessageText::color)
	.def("clear_color", &CUserMsg_MessageText::clear_color)
	.def("has_text", &CUserMsg_MessageText::has_text)
	.def("text", &CUserMsg_MessageText::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CUserMsg_MessageText::clear_text)
;

#endif // PROTOBUF_usermessages.proto_BOOST_PYTHON_INCLUDED
