// Generated by the protocol buffer compiler. DO NOT EDIT!
// Source: dota_usermessages

#ifndef PROTOBUF_dota_usermessages_BOOST_PYTHON_INCLUDED
#define PROTOBUF_dota_usermessages_BOOST_PYTHON_INCLUDED

class_<CDOTAUserMsg_AIDebugLine>("CDOTAUserMsg_AIDebugLine")
	.def("has_message", &CDOTAUserMsg_AIDebugLine::has_message)
	.def("message", &CDOTAUserMsg_AIDebugLine::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CDOTAUserMsg_AIDebugLine::clear_message)
;

class_<CDOTAUserMsg_Ping>("CDOTAUserMsg_Ping")
	.def("has_message", &CDOTAUserMsg_Ping::has_message)
	.def("message", &CDOTAUserMsg_Ping::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CDOTAUserMsg_Ping::clear_message)
;

class_<CDOTAUserMsg_SwapVerify>("CDOTAUserMsg_SwapVerify")
	.def("has_player_id", &CDOTAUserMsg_SwapVerify::has_player_id)
	.def("player_id", &CDOTAUserMsg_SwapVerify::player_id)
	.def("clear_player_id", &CDOTAUserMsg_SwapVerify::clear_player_id)
;

class_<CDOTAUserMsg_ChatEvent>("CDOTAUserMsg_ChatEvent")
	.def("has_type", &CDOTAUserMsg_ChatEvent::has_type)
	.def("type", &CDOTAUserMsg_ChatEvent::type)
	.def("clear_type", &CDOTAUserMsg_ChatEvent::clear_type)
	.def("has_value", &CDOTAUserMsg_ChatEvent::has_value)
	.def("value", &CDOTAUserMsg_ChatEvent::value)
	.def("clear_value", &CDOTAUserMsg_ChatEvent::clear_value)
	.def("has_playerid_1", &CDOTAUserMsg_ChatEvent::has_playerid_1)
	.def("playerid_1", &CDOTAUserMsg_ChatEvent::playerid_1)
	.def("clear_playerid_1", &CDOTAUserMsg_ChatEvent::clear_playerid_1)
	.def("has_playerid_2", &CDOTAUserMsg_ChatEvent::has_playerid_2)
	.def("playerid_2", &CDOTAUserMsg_ChatEvent::playerid_2)
	.def("clear_playerid_2", &CDOTAUserMsg_ChatEvent::clear_playerid_2)
	.def("has_playerid_3", &CDOTAUserMsg_ChatEvent::has_playerid_3)
	.def("playerid_3", &CDOTAUserMsg_ChatEvent::playerid_3)
	.def("clear_playerid_3", &CDOTAUserMsg_ChatEvent::clear_playerid_3)
	.def("has_playerid_4", &CDOTAUserMsg_ChatEvent::has_playerid_4)
	.def("playerid_4", &CDOTAUserMsg_ChatEvent::playerid_4)
	.def("clear_playerid_4", &CDOTAUserMsg_ChatEvent::clear_playerid_4)
	.def("has_playerid_5", &CDOTAUserMsg_ChatEvent::has_playerid_5)
	.def("playerid_5", &CDOTAUserMsg_ChatEvent::playerid_5)
	.def("clear_playerid_5", &CDOTAUserMsg_ChatEvent::clear_playerid_5)
	.def("has_playerid_6", &CDOTAUserMsg_ChatEvent::has_playerid_6)
	.def("playerid_6", &CDOTAUserMsg_ChatEvent::playerid_6)
	.def("clear_playerid_6", &CDOTAUserMsg_ChatEvent::clear_playerid_6)
;

class_<CDOTAUserMsg_CombatLogData>("CDOTAUserMsg_CombatLogData")
	.def("has_type", &CDOTAUserMsg_CombatLogData::has_type)
	.def("type", &CDOTAUserMsg_CombatLogData::type)
	.def("clear_type", &CDOTAUserMsg_CombatLogData::clear_type)
	.def("has_target_name", &CDOTAUserMsg_CombatLogData::has_target_name)
	.def("target_name", &CDOTAUserMsg_CombatLogData::target_name)
	.def("clear_target_name", &CDOTAUserMsg_CombatLogData::clear_target_name)
	.def("has_attacker_name", &CDOTAUserMsg_CombatLogData::has_attacker_name)
	.def("attacker_name", &CDOTAUserMsg_CombatLogData::attacker_name)
	.def("clear_attacker_name", &CDOTAUserMsg_CombatLogData::clear_attacker_name)
	.def("has_attacker_illusion", &CDOTAUserMsg_CombatLogData::has_attacker_illusion)
	.def("attacker_illusion", &CDOTAUserMsg_CombatLogData::attacker_illusion)
	.def("clear_attacker_illusion", &CDOTAUserMsg_CombatLogData::clear_attacker_illusion)
	.def("has_target_illusion", &CDOTAUserMsg_CombatLogData::has_target_illusion)
	.def("target_illusion", &CDOTAUserMsg_CombatLogData::target_illusion)
	.def("clear_target_illusion", &CDOTAUserMsg_CombatLogData::clear_target_illusion)
	.def("has_inflictor_name", &CDOTAUserMsg_CombatLogData::has_inflictor_name)
	.def("inflictor_name", &CDOTAUserMsg_CombatLogData::inflictor_name)
	.def("clear_inflictor_name", &CDOTAUserMsg_CombatLogData::clear_inflictor_name)
	.def("has_value", &CDOTAUserMsg_CombatLogData::has_value)
	.def("value", &CDOTAUserMsg_CombatLogData::value)
	.def("clear_value", &CDOTAUserMsg_CombatLogData::clear_value)
	.def("has_health", &CDOTAUserMsg_CombatLogData::has_health)
	.def("health", &CDOTAUserMsg_CombatLogData::health)
	.def("clear_health", &CDOTAUserMsg_CombatLogData::clear_health)
	.def("has_time", &CDOTAUserMsg_CombatLogData::has_time)
	.def("time", &CDOTAUserMsg_CombatLogData::time)
	.def("clear_time", &CDOTAUserMsg_CombatLogData::clear_time)
;

class_<CDOTAUserMsg_CombatLogShowDeath>("CDOTAUserMsg_CombatLogShowDeath")
;

class_<CDOTAUserMsg_BotChat>("CDOTAUserMsg_BotChat")
	.def("has_player_id", &CDOTAUserMsg_BotChat::has_player_id)
	.def("player_id", &CDOTAUserMsg_BotChat::player_id)
	.def("clear_player_id", &CDOTAUserMsg_BotChat::clear_player_id)
	.def("has_format", &CDOTAUserMsg_BotChat::has_format)
	.def("format", &CDOTAUserMsg_BotChat::format, return_value_policy<copy_const_reference>())
	.def("clear_format", &CDOTAUserMsg_BotChat::clear_format)
	.def("has_message", &CDOTAUserMsg_BotChat::has_message)
	.def("message", &CDOTAUserMsg_BotChat::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CDOTAUserMsg_BotChat::clear_message)
	.def("has_target", &CDOTAUserMsg_BotChat::has_target)
	.def("target", &CDOTAUserMsg_BotChat::target, return_value_policy<copy_const_reference>())
	.def("clear_target", &CDOTAUserMsg_BotChat::clear_target)
;

class_<CDOTAUserMsg_CombatHeroPositions>("CDOTAUserMsg_CombatHeroPositions")
	.def("has_index", &CDOTAUserMsg_CombatHeroPositions::has_index)
	.def("index", &CDOTAUserMsg_CombatHeroPositions::index)
	.def("clear_index", &CDOTAUserMsg_CombatHeroPositions::clear_index)
	.def("has_time", &CDOTAUserMsg_CombatHeroPositions::has_time)
	.def("time", &CDOTAUserMsg_CombatHeroPositions::time)
	.def("clear_time", &CDOTAUserMsg_CombatHeroPositions::clear_time)
	.def("has_world_pos", &CDOTAUserMsg_CombatHeroPositions::has_world_pos)
	.def("world_pos", &CDOTAUserMsg_CombatHeroPositions::world_pos, return_value_policy<reference_existing_object>())
	.def("clear_world_pos", &CDOTAUserMsg_CombatHeroPositions::clear_world_pos)
	.def("has_health", &CDOTAUserMsg_CombatHeroPositions::has_health)
	.def("health", &CDOTAUserMsg_CombatHeroPositions::health)
	.def("clear_health", &CDOTAUserMsg_CombatHeroPositions::clear_health)
;

class_<CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>("CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability")
	.def("has_ability", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_ability)
	.def("ability", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::ability)
	.def("clear_ability", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_ability)
	.def("has_damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_damage)
	.def("damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::damage)
	.def("clear_damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_damage)
;

class_<CDOTAUserMsg_MiniKillCamInfo_Attacker>("CDOTAUserMsg_MiniKillCamInfo_Attacker")
	.def("has_attacker", &CDOTAUserMsg_MiniKillCamInfo_Attacker::has_attacker)
	.def("attacker", &CDOTAUserMsg_MiniKillCamInfo_Attacker::attacker)
	.def("clear_attacker", &CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_attacker)
	.def("has_total_damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker::has_total_damage)
	.def("total_damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker::total_damage)
	.def("clear_total_damage", &CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_total_damage)
	.def("abilities_size", &CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities_size)
	.def("clear_abilities", &CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_abilities)
;

class_<CDOTAUserMsg_MiniKillCamInfo>("CDOTAUserMsg_MiniKillCamInfo")
	.def("attackers_size", &CDOTAUserMsg_MiniKillCamInfo::attackers_size)
	.def("clear_attackers", &CDOTAUserMsg_MiniKillCamInfo::clear_attackers)
;

class_<CDOTAUserMsg_GlobalLightColor>("CDOTAUserMsg_GlobalLightColor")
	.def("has_color", &CDOTAUserMsg_GlobalLightColor::has_color)
	.def("color", &CDOTAUserMsg_GlobalLightColor::color)
	.def("clear_color", &CDOTAUserMsg_GlobalLightColor::clear_color)
	.def("has_duration", &CDOTAUserMsg_GlobalLightColor::has_duration)
	.def("duration", &CDOTAUserMsg_GlobalLightColor::duration)
	.def("clear_duration", &CDOTAUserMsg_GlobalLightColor::clear_duration)
;

class_<CDOTAUserMsg_GlobalLightDirection>("CDOTAUserMsg_GlobalLightDirection")
	.def("has_direction", &CDOTAUserMsg_GlobalLightDirection::has_direction)
	.def("direction", &CDOTAUserMsg_GlobalLightDirection::direction, return_value_policy<reference_existing_object>())
	.def("clear_direction", &CDOTAUserMsg_GlobalLightDirection::clear_direction)
	.def("has_duration", &CDOTAUserMsg_GlobalLightDirection::has_duration)
	.def("duration", &CDOTAUserMsg_GlobalLightDirection::duration)
	.def("clear_duration", &CDOTAUserMsg_GlobalLightDirection::clear_duration)
;

class_<CDOTAUserMsg_LocationPing>("CDOTAUserMsg_LocationPing")
	.def("has_player_id", &CDOTAUserMsg_LocationPing::has_player_id)
	.def("player_id", &CDOTAUserMsg_LocationPing::player_id)
	.def("clear_player_id", &CDOTAUserMsg_LocationPing::clear_player_id)
	.def("has_location_ping", &CDOTAUserMsg_LocationPing::has_location_ping)
	.def("location_ping", &CDOTAUserMsg_LocationPing::location_ping, return_value_policy<reference_existing_object>())
	.def("clear_location_ping", &CDOTAUserMsg_LocationPing::clear_location_ping)
;

class_<CDOTAUserMsg_ItemAlert>("CDOTAUserMsg_ItemAlert")
	.def("has_player_id", &CDOTAUserMsg_ItemAlert::has_player_id)
	.def("player_id", &CDOTAUserMsg_ItemAlert::player_id)
	.def("clear_player_id", &CDOTAUserMsg_ItemAlert::clear_player_id)
	.def("has_item_alert", &CDOTAUserMsg_ItemAlert::has_item_alert)
	.def("item_alert", &CDOTAUserMsg_ItemAlert::item_alert, return_value_policy<reference_existing_object>())
	.def("clear_item_alert", &CDOTAUserMsg_ItemAlert::clear_item_alert)
;

class_<CDOTAUserMsg_WillPurchaseAlert>("CDOTAUserMsg_WillPurchaseAlert")
	.def("has_itemid", &CDOTAUserMsg_WillPurchaseAlert::has_itemid)
	.def("itemid", &CDOTAUserMsg_WillPurchaseAlert::itemid)
	.def("clear_itemid", &CDOTAUserMsg_WillPurchaseAlert::clear_itemid)
	.def("has_player_id", &CDOTAUserMsg_WillPurchaseAlert::has_player_id)
	.def("player_id", &CDOTAUserMsg_WillPurchaseAlert::player_id)
	.def("clear_player_id", &CDOTAUserMsg_WillPurchaseAlert::clear_player_id)
;

class_<CDOTAUserMsg_MinimapEvent>("CDOTAUserMsg_MinimapEvent")
	.def("has_event_type", &CDOTAUserMsg_MinimapEvent::has_event_type)
	.def("event_type", &CDOTAUserMsg_MinimapEvent::event_type)
	.def("clear_event_type", &CDOTAUserMsg_MinimapEvent::clear_event_type)
	.def("has_entity_handle", &CDOTAUserMsg_MinimapEvent::has_entity_handle)
	.def("entity_handle", &CDOTAUserMsg_MinimapEvent::entity_handle)
	.def("clear_entity_handle", &CDOTAUserMsg_MinimapEvent::clear_entity_handle)
	.def("has_x", &CDOTAUserMsg_MinimapEvent::has_x)
	.def("x", &CDOTAUserMsg_MinimapEvent::x)
	.def("clear_x", &CDOTAUserMsg_MinimapEvent::clear_x)
	.def("has_y", &CDOTAUserMsg_MinimapEvent::has_y)
	.def("y", &CDOTAUserMsg_MinimapEvent::y)
	.def("clear_y", &CDOTAUserMsg_MinimapEvent::clear_y)
	.def("has_duration", &CDOTAUserMsg_MinimapEvent::has_duration)
	.def("duration", &CDOTAUserMsg_MinimapEvent::duration)
	.def("clear_duration", &CDOTAUserMsg_MinimapEvent::clear_duration)
;

class_<CDOTAUserMsg_MapLine>("CDOTAUserMsg_MapLine")
	.def("has_player_id", &CDOTAUserMsg_MapLine::has_player_id)
	.def("player_id", &CDOTAUserMsg_MapLine::player_id)
	.def("clear_player_id", &CDOTAUserMsg_MapLine::clear_player_id)
	.def("has_mapline", &CDOTAUserMsg_MapLine::has_mapline)
	.def("mapline", &CDOTAUserMsg_MapLine::mapline, return_value_policy<reference_existing_object>())
	.def("clear_mapline", &CDOTAUserMsg_MapLine::clear_mapline)
;

class_<CDOTAUserMsg_MinimapDebugPoint>("CDOTAUserMsg_MinimapDebugPoint")
	.def("has_location", &CDOTAUserMsg_MinimapDebugPoint::has_location)
	.def("location", &CDOTAUserMsg_MinimapDebugPoint::location, return_value_policy<reference_existing_object>())
	.def("clear_location", &CDOTAUserMsg_MinimapDebugPoint::clear_location)
	.def("has_color", &CDOTAUserMsg_MinimapDebugPoint::has_color)
	.def("color", &CDOTAUserMsg_MinimapDebugPoint::color)
	.def("clear_color", &CDOTAUserMsg_MinimapDebugPoint::clear_color)
	.def("has_size", &CDOTAUserMsg_MinimapDebugPoint::has_size)
	.def("size", &CDOTAUserMsg_MinimapDebugPoint::size)
	.def("clear_size", &CDOTAUserMsg_MinimapDebugPoint::clear_size)
	.def("has_duration", &CDOTAUserMsg_MinimapDebugPoint::has_duration)
	.def("duration", &CDOTAUserMsg_MinimapDebugPoint::duration)
	.def("clear_duration", &CDOTAUserMsg_MinimapDebugPoint::clear_duration)
;

class_<CDOTAUserMsg_CreateLinearProjectile>("CDOTAUserMsg_CreateLinearProjectile")
	.def("has_origin", &CDOTAUserMsg_CreateLinearProjectile::has_origin)
	.def("origin", &CDOTAUserMsg_CreateLinearProjectile::origin, return_value_policy<reference_existing_object>())
	.def("clear_origin", &CDOTAUserMsg_CreateLinearProjectile::clear_origin)
	.def("has_velocity", &CDOTAUserMsg_CreateLinearProjectile::has_velocity)
	.def("velocity", &CDOTAUserMsg_CreateLinearProjectile::velocity, return_value_policy<reference_existing_object>())
	.def("clear_velocity", &CDOTAUserMsg_CreateLinearProjectile::clear_velocity)
	.def("has_latency", &CDOTAUserMsg_CreateLinearProjectile::has_latency)
	.def("latency", &CDOTAUserMsg_CreateLinearProjectile::latency)
	.def("clear_latency", &CDOTAUserMsg_CreateLinearProjectile::clear_latency)
	.def("has_entindex", &CDOTAUserMsg_CreateLinearProjectile::has_entindex)
	.def("entindex", &CDOTAUserMsg_CreateLinearProjectile::entindex)
	.def("clear_entindex", &CDOTAUserMsg_CreateLinearProjectile::clear_entindex)
	.def("has_particle_index", &CDOTAUserMsg_CreateLinearProjectile::has_particle_index)
	.def("particle_index", &CDOTAUserMsg_CreateLinearProjectile::particle_index)
	.def("clear_particle_index", &CDOTAUserMsg_CreateLinearProjectile::clear_particle_index)
	.def("has_handle", &CDOTAUserMsg_CreateLinearProjectile::has_handle)
	.def("handle", &CDOTAUserMsg_CreateLinearProjectile::handle)
	.def("clear_handle", &CDOTAUserMsg_CreateLinearProjectile::clear_handle)
;

class_<CDOTAUserMsg_DestroyLinearProjectile>("CDOTAUserMsg_DestroyLinearProjectile")
	.def("has_handle", &CDOTAUserMsg_DestroyLinearProjectile::has_handle)
	.def("handle", &CDOTAUserMsg_DestroyLinearProjectile::handle)
	.def("clear_handle", &CDOTAUserMsg_DestroyLinearProjectile::clear_handle)
;

class_<CDOTAUserMsg_DodgeTrackingProjectiles>("CDOTAUserMsg_DodgeTrackingProjectiles")
	.def("has_entindex", &CDOTAUserMsg_DodgeTrackingProjectiles::has_entindex)
	.def("entindex", &CDOTAUserMsg_DodgeTrackingProjectiles::entindex)
	.def("clear_entindex", &CDOTAUserMsg_DodgeTrackingProjectiles::clear_entindex)
;

class_<CDOTAUserMsg_SpectatorPlayerClick>("CDOTAUserMsg_SpectatorPlayerClick")
	.def("has_entindex", &CDOTAUserMsg_SpectatorPlayerClick::has_entindex)
	.def("entindex", &CDOTAUserMsg_SpectatorPlayerClick::entindex)
	.def("clear_entindex", &CDOTAUserMsg_SpectatorPlayerClick::clear_entindex)
	.def("has_order_type", &CDOTAUserMsg_SpectatorPlayerClick::has_order_type)
	.def("order_type", &CDOTAUserMsg_SpectatorPlayerClick::order_type)
	.def("clear_order_type", &CDOTAUserMsg_SpectatorPlayerClick::clear_order_type)
	.def("has_target_index", &CDOTAUserMsg_SpectatorPlayerClick::has_target_index)
	.def("target_index", &CDOTAUserMsg_SpectatorPlayerClick::target_index)
	.def("clear_target_index", &CDOTAUserMsg_SpectatorPlayerClick::clear_target_index)
;

class_<CDOTAUserMsg_NevermoreRequiem>("CDOTAUserMsg_NevermoreRequiem")
	.def("has_entity_handle", &CDOTAUserMsg_NevermoreRequiem::has_entity_handle)
	.def("entity_handle", &CDOTAUserMsg_NevermoreRequiem::entity_handle)
	.def("clear_entity_handle", &CDOTAUserMsg_NevermoreRequiem::clear_entity_handle)
	.def("has_lines", &CDOTAUserMsg_NevermoreRequiem::has_lines)
	.def("lines", &CDOTAUserMsg_NevermoreRequiem::lines)
	.def("clear_lines", &CDOTAUserMsg_NevermoreRequiem::clear_lines)
	.def("has_origin", &CDOTAUserMsg_NevermoreRequiem::has_origin)
	.def("origin", &CDOTAUserMsg_NevermoreRequiem::origin, return_value_policy<reference_existing_object>())
	.def("clear_origin", &CDOTAUserMsg_NevermoreRequiem::clear_origin)
;

class_<CDOTAUserMsg_InvalidCommand>("CDOTAUserMsg_InvalidCommand")
	.def("has_message", &CDOTAUserMsg_InvalidCommand::has_message)
	.def("message", &CDOTAUserMsg_InvalidCommand::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CDOTAUserMsg_InvalidCommand::clear_message)
;

class_<CDOTAUserMsg_HudError>("CDOTAUserMsg_HudError")
	.def("has_order_id", &CDOTAUserMsg_HudError::has_order_id)
	.def("order_id", &CDOTAUserMsg_HudError::order_id)
	.def("clear_order_id", &CDOTAUserMsg_HudError::clear_order_id)
;

class_<CDOTAUserMsg_SharedCooldown>("CDOTAUserMsg_SharedCooldown")
	.def("has_entindex", &CDOTAUserMsg_SharedCooldown::has_entindex)
	.def("entindex", &CDOTAUserMsg_SharedCooldown::entindex)
	.def("clear_entindex", &CDOTAUserMsg_SharedCooldown::clear_entindex)
	.def("has_name", &CDOTAUserMsg_SharedCooldown::has_name)
	.def("name", &CDOTAUserMsg_SharedCooldown::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CDOTAUserMsg_SharedCooldown::clear_name)
	.def("has_cooldown", &CDOTAUserMsg_SharedCooldown::has_cooldown)
	.def("cooldown", &CDOTAUserMsg_SharedCooldown::cooldown)
	.def("clear_cooldown", &CDOTAUserMsg_SharedCooldown::clear_cooldown)
	.def("has_name_index", &CDOTAUserMsg_SharedCooldown::has_name_index)
	.def("name_index", &CDOTAUserMsg_SharedCooldown::name_index)
	.def("clear_name_index", &CDOTAUserMsg_SharedCooldown::clear_name_index)
;

class_<CDOTAUserMsg_SetNextAutobuyItem>("CDOTAUserMsg_SetNextAutobuyItem")
	.def("has_name", &CDOTAUserMsg_SetNextAutobuyItem::has_name)
	.def("name", &CDOTAUserMsg_SetNextAutobuyItem::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CDOTAUserMsg_SetNextAutobuyItem::clear_name)
;

class_<CDOTAUserMsg_HalloweenDrops>("CDOTAUserMsg_HalloweenDrops")
	.def("item_defs_size", &CDOTAUserMsg_HalloweenDrops::item_defs_size)
	.def("clear_item_defs", &CDOTAUserMsg_HalloweenDrops::clear_item_defs)
	.def("player_ids_size", &CDOTAUserMsg_HalloweenDrops::player_ids_size)
	.def("clear_player_ids", &CDOTAUserMsg_HalloweenDrops::clear_player_ids)
	.def("has_prize_list", &CDOTAUserMsg_HalloweenDrops::has_prize_list)
	.def("prize_list", &CDOTAUserMsg_HalloweenDrops::prize_list)
	.def("clear_prize_list", &CDOTAUserMsg_HalloweenDrops::clear_prize_list)
;

class_<CDOTAResponseQuerySerialized_Fact>("CDOTAResponseQuerySerialized_Fact")
	.def("has_key", &CDOTAResponseQuerySerialized_Fact::has_key)
	.def("key", &CDOTAResponseQuerySerialized_Fact::key)
	.def("clear_key", &CDOTAResponseQuerySerialized_Fact::clear_key)
	.def("has_valtype", &CDOTAResponseQuerySerialized_Fact::has_valtype)
	.def("valtype", &CDOTAResponseQuerySerialized_Fact::valtype)
	.def("clear_valtype", &CDOTAResponseQuerySerialized_Fact::clear_valtype)
	.def("has_val_numeric", &CDOTAResponseQuerySerialized_Fact::has_val_numeric)
	.def("val_numeric", &CDOTAResponseQuerySerialized_Fact::val_numeric)
	.def("clear_val_numeric", &CDOTAResponseQuerySerialized_Fact::clear_val_numeric)
	.def("has_val_string", &CDOTAResponseQuerySerialized_Fact::has_val_string)
	.def("val_string", &CDOTAResponseQuerySerialized_Fact::val_string, return_value_policy<copy_const_reference>())
	.def("clear_val_string", &CDOTAResponseQuerySerialized_Fact::clear_val_string)
;

class_<CDOTAResponseQuerySerialized>("CDOTAResponseQuerySerialized")
	.def("facts_size", &CDOTAResponseQuerySerialized::facts_size)
	.def("clear_facts", &CDOTAResponseQuerySerialized::clear_facts)
;

class_<CDOTASpeechMatchOnClient>("CDOTASpeechMatchOnClient")
	.def("has_concept", &CDOTASpeechMatchOnClient::has_concept)
	.def("concept", &CDOTASpeechMatchOnClient::concept)
	.def("clear_concept", &CDOTASpeechMatchOnClient::clear_concept)
	.def("has_recipient_type", &CDOTASpeechMatchOnClient::has_recipient_type)
	.def("recipient_type", &CDOTASpeechMatchOnClient::recipient_type)
	.def("clear_recipient_type", &CDOTASpeechMatchOnClient::clear_recipient_type)
	.def("has_responsequery", &CDOTASpeechMatchOnClient::has_responsequery)
	.def("responsequery", &CDOTASpeechMatchOnClient::responsequery, return_value_policy<reference_existing_object>())
	.def("clear_responsequery", &CDOTASpeechMatchOnClient::clear_responsequery)
	.def("has_randomseed", &CDOTASpeechMatchOnClient::has_randomseed)
	.def("randomseed", &CDOTASpeechMatchOnClient::randomseed)
	.def("clear_randomseed", &CDOTASpeechMatchOnClient::clear_randomseed)
;

class_<CDOTAUserMsg_UnitEvent_Speech>("CDOTAUserMsg_UnitEvent_Speech")
	.def("has_concept", &CDOTAUserMsg_UnitEvent_Speech::has_concept)
	.def("concept", &CDOTAUserMsg_UnitEvent_Speech::concept)
	.def("clear_concept", &CDOTAUserMsg_UnitEvent_Speech::clear_concept)
	.def("has_response", &CDOTAUserMsg_UnitEvent_Speech::has_response)
	.def("response", &CDOTAUserMsg_UnitEvent_Speech::response, return_value_policy<copy_const_reference>())
	.def("clear_response", &CDOTAUserMsg_UnitEvent_Speech::clear_response)
	.def("has_recipient_type", &CDOTAUserMsg_UnitEvent_Speech::has_recipient_type)
	.def("recipient_type", &CDOTAUserMsg_UnitEvent_Speech::recipient_type)
	.def("clear_recipient_type", &CDOTAUserMsg_UnitEvent_Speech::clear_recipient_type)
	.def("has_level", &CDOTAUserMsg_UnitEvent_Speech::has_level)
	.def("level", &CDOTAUserMsg_UnitEvent_Speech::level)
	.def("clear_level", &CDOTAUserMsg_UnitEvent_Speech::clear_level)
	.def("has_muteable", &CDOTAUserMsg_UnitEvent_Speech::has_muteable)
	.def("muteable", &CDOTAUserMsg_UnitEvent_Speech::muteable)
	.def("clear_muteable", &CDOTAUserMsg_UnitEvent_Speech::clear_muteable)
;

class_<CDOTAUserMsg_UnitEvent_SpeechMute>("CDOTAUserMsg_UnitEvent_SpeechMute")
	.def("has_delay", &CDOTAUserMsg_UnitEvent_SpeechMute::has_delay)
	.def("delay", &CDOTAUserMsg_UnitEvent_SpeechMute::delay)
	.def("clear_delay", &CDOTAUserMsg_UnitEvent_SpeechMute::clear_delay)
;

class_<CDOTAUserMsg_UnitEvent_AddGesture>("CDOTAUserMsg_UnitEvent_AddGesture")
	.def("has_activity", &CDOTAUserMsg_UnitEvent_AddGesture::has_activity)
	.def("activity", &CDOTAUserMsg_UnitEvent_AddGesture::activity)
	.def("clear_activity", &CDOTAUserMsg_UnitEvent_AddGesture::clear_activity)
	.def("has_slot", &CDOTAUserMsg_UnitEvent_AddGesture::has_slot)
	.def("slot", &CDOTAUserMsg_UnitEvent_AddGesture::slot)
	.def("clear_slot", &CDOTAUserMsg_UnitEvent_AddGesture::clear_slot)
	.def("has_fade_in", &CDOTAUserMsg_UnitEvent_AddGesture::has_fade_in)
	.def("fade_in", &CDOTAUserMsg_UnitEvent_AddGesture::fade_in)
	.def("clear_fade_in", &CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_in)
	.def("has_fade_out", &CDOTAUserMsg_UnitEvent_AddGesture::has_fade_out)
	.def("fade_out", &CDOTAUserMsg_UnitEvent_AddGesture::fade_out)
	.def("clear_fade_out", &CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_out)
;

class_<CDOTAUserMsg_UnitEvent_RemoveGesture>("CDOTAUserMsg_UnitEvent_RemoveGesture")
	.def("has_activity", &CDOTAUserMsg_UnitEvent_RemoveGesture::has_activity)
	.def("activity", &CDOTAUserMsg_UnitEvent_RemoveGesture::activity)
	.def("clear_activity", &CDOTAUserMsg_UnitEvent_RemoveGesture::clear_activity)
;

class_<CDOTAUserMsg_UnitEvent_BloodImpact>("CDOTAUserMsg_UnitEvent_BloodImpact")
	.def("has_scale", &CDOTAUserMsg_UnitEvent_BloodImpact::has_scale)
	.def("scale", &CDOTAUserMsg_UnitEvent_BloodImpact::scale)
	.def("clear_scale", &CDOTAUserMsg_UnitEvent_BloodImpact::clear_scale)
	.def("has_x_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::has_x_normal)
	.def("x_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::x_normal)
	.def("clear_x_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::clear_x_normal)
	.def("has_y_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::has_y_normal)
	.def("y_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::y_normal)
	.def("clear_y_normal", &CDOTAUserMsg_UnitEvent_BloodImpact::clear_y_normal)
;

class_<CDOTAUserMsg_UnitEvent_FadeGesture>("CDOTAUserMsg_UnitEvent_FadeGesture")
	.def("has_activity", &CDOTAUserMsg_UnitEvent_FadeGesture::has_activity)
	.def("activity", &CDOTAUserMsg_UnitEvent_FadeGesture::activity)
	.def("clear_activity", &CDOTAUserMsg_UnitEvent_FadeGesture::clear_activity)
;

class_<CDOTAUserMsg_UnitEvent>("CDOTAUserMsg_UnitEvent")
	.def("has_msg_type", &CDOTAUserMsg_UnitEvent::has_msg_type)
	.def("msg_type", &CDOTAUserMsg_UnitEvent::msg_type)
	.def("clear_msg_type", &CDOTAUserMsg_UnitEvent::clear_msg_type)
	.def("has_entity_index", &CDOTAUserMsg_UnitEvent::has_entity_index)
	.def("entity_index", &CDOTAUserMsg_UnitEvent::entity_index)
	.def("clear_entity_index", &CDOTAUserMsg_UnitEvent::clear_entity_index)
	.def("has_speech", &CDOTAUserMsg_UnitEvent::has_speech)
	.def("speech", &CDOTAUserMsg_UnitEvent::speech, return_value_policy<reference_existing_object>())
	.def("clear_speech", &CDOTAUserMsg_UnitEvent::clear_speech)
	.def("has_speech_mute", &CDOTAUserMsg_UnitEvent::has_speech_mute)
	.def("speech_mute", &CDOTAUserMsg_UnitEvent::speech_mute, return_value_policy<reference_existing_object>())
	.def("clear_speech_mute", &CDOTAUserMsg_UnitEvent::clear_speech_mute)
	.def("has_add_gesture", &CDOTAUserMsg_UnitEvent::has_add_gesture)
	.def("add_gesture", &CDOTAUserMsg_UnitEvent::add_gesture, return_value_policy<reference_existing_object>())
	.def("clear_add_gesture", &CDOTAUserMsg_UnitEvent::clear_add_gesture)
	.def("has_remove_gesture", &CDOTAUserMsg_UnitEvent::has_remove_gesture)
	.def("remove_gesture", &CDOTAUserMsg_UnitEvent::remove_gesture, return_value_policy<reference_existing_object>())
	.def("clear_remove_gesture", &CDOTAUserMsg_UnitEvent::clear_remove_gesture)
	.def("has_blood_impact", &CDOTAUserMsg_UnitEvent::has_blood_impact)
	.def("blood_impact", &CDOTAUserMsg_UnitEvent::blood_impact, return_value_policy<reference_existing_object>())
	.def("clear_blood_impact", &CDOTAUserMsg_UnitEvent::clear_blood_impact)
	.def("has_fade_gesture", &CDOTAUserMsg_UnitEvent::has_fade_gesture)
	.def("fade_gesture", &CDOTAUserMsg_UnitEvent::fade_gesture, return_value_policy<reference_existing_object>())
	.def("clear_fade_gesture", &CDOTAUserMsg_UnitEvent::clear_fade_gesture)
	.def("has_speech_match_on_client", &CDOTAUserMsg_UnitEvent::has_speech_match_on_client)
	.def("speech_match_on_client", &CDOTAUserMsg_UnitEvent::speech_match_on_client, return_value_policy<reference_existing_object>())
	.def("clear_speech_match_on_client", &CDOTAUserMsg_UnitEvent::clear_speech_match_on_client)
;

class_<CDOTAUserMsg_ItemPurchased>("CDOTAUserMsg_ItemPurchased")
	.def("has_item_index", &CDOTAUserMsg_ItemPurchased::has_item_index)
	.def("item_index", &CDOTAUserMsg_ItemPurchased::item_index)
	.def("clear_item_index", &CDOTAUserMsg_ItemPurchased::clear_item_index)
;

class_<CDOTAUserMsg_ItemFound>("CDOTAUserMsg_ItemFound")
	.def("has_player", &CDOTAUserMsg_ItemFound::has_player)
	.def("player", &CDOTAUserMsg_ItemFound::player)
	.def("clear_player", &CDOTAUserMsg_ItemFound::clear_player)
	.def("has_quality", &CDOTAUserMsg_ItemFound::has_quality)
	.def("quality", &CDOTAUserMsg_ItemFound::quality)
	.def("clear_quality", &CDOTAUserMsg_ItemFound::clear_quality)
	.def("has_rarity", &CDOTAUserMsg_ItemFound::has_rarity)
	.def("rarity", &CDOTAUserMsg_ItemFound::rarity)
	.def("clear_rarity", &CDOTAUserMsg_ItemFound::clear_rarity)
	.def("has_method", &CDOTAUserMsg_ItemFound::has_method)
	.def("method", &CDOTAUserMsg_ItemFound::method)
	.def("clear_method", &CDOTAUserMsg_ItemFound::clear_method)
	.def("has_itemdef", &CDOTAUserMsg_ItemFound::has_itemdef)
	.def("itemdef", &CDOTAUserMsg_ItemFound::itemdef)
	.def("clear_itemdef", &CDOTAUserMsg_ItemFound::clear_itemdef)
;

class_<CDOTAUserMsg_ParticleManager_ReleaseParticleIndex>("CDOTAUserMsg_ParticleManager_ReleaseParticleIndex")
;

class_<CDOTAUserMsg_ParticleManager_CreateParticle>("CDOTAUserMsg_ParticleManager_CreateParticle")
	.def("has_particle_name_index", &CDOTAUserMsg_ParticleManager_CreateParticle::has_particle_name_index)
	.def("particle_name_index", &CDOTAUserMsg_ParticleManager_CreateParticle::particle_name_index)
	.def("clear_particle_name_index", &CDOTAUserMsg_ParticleManager_CreateParticle::clear_particle_name_index)
	.def("has_attach_type", &CDOTAUserMsg_ParticleManager_CreateParticle::has_attach_type)
	.def("attach_type", &CDOTAUserMsg_ParticleManager_CreateParticle::attach_type)
	.def("clear_attach_type", &CDOTAUserMsg_ParticleManager_CreateParticle::clear_attach_type)
	.def("has_entity_handle", &CDOTAUserMsg_ParticleManager_CreateParticle::has_entity_handle)
	.def("entity_handle", &CDOTAUserMsg_ParticleManager_CreateParticle::entity_handle)
	.def("clear_entity_handle", &CDOTAUserMsg_ParticleManager_CreateParticle::clear_entity_handle)
;

class_<CDOTAUserMsg_ParticleManager_DestroyParticle>("CDOTAUserMsg_ParticleManager_DestroyParticle")
	.def("has_destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticle::has_destroy_immediately)
	.def("destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticle::destroy_immediately)
	.def("clear_destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticle::clear_destroy_immediately)
;

class_<CDOTAUserMsg_ParticleManager_DestroyParticleInvolving>("CDOTAUserMsg_ParticleManager_DestroyParticleInvolving")
	.def("has_destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::has_destroy_immediately)
	.def("destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::destroy_immediately)
	.def("clear_destroy_immediately", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_destroy_immediately)
	.def("has_entity_handle", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::has_entity_handle)
	.def("entity_handle", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::entity_handle)
	.def("clear_entity_handle", &CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_entity_handle)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticle>("CDOTAUserMsg_ParticleManager_UpdateParticle")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticle::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticle::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticle::clear_control_point)
	.def("has_position", &CDOTAUserMsg_ParticleManager_UpdateParticle::has_position)
	.def("position", &CDOTAUserMsg_ParticleManager_UpdateParticle::position, return_value_policy<reference_existing_object>())
	.def("clear_position", &CDOTAUserMsg_ParticleManager_UpdateParticle::clear_position)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleFwd>("CDOTAUserMsg_ParticleManager_UpdateParticleFwd")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_control_point)
	.def("has_forward", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::has_forward)
	.def("forward", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::forward, return_value_policy<reference_existing_object>())
	.def("clear_forward", &CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_forward)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleOrient>("CDOTAUserMsg_ParticleManager_UpdateParticleOrient")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_control_point)
	.def("has_forward", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_forward)
	.def("forward", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::forward, return_value_policy<reference_existing_object>())
	.def("clear_forward", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_forward)
	.def("has_right", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_right)
	.def("right", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::right, return_value_policy<reference_existing_object>())
	.def("clear_right", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_right)
	.def("has_up", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_up)
	.def("up", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::up, return_value_policy<reference_existing_object>())
	.def("clear_up", &CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_up)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleFallback>("CDOTAUserMsg_ParticleManager_UpdateParticleFallback")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_control_point)
	.def("has_position", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::has_position)
	.def("position", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::position, return_value_policy<reference_existing_object>())
	.def("clear_position", &CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_position)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleOffset>("CDOTAUserMsg_ParticleManager_UpdateParticleOffset")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_control_point)
	.def("has_origin_offset", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::has_origin_offset)
	.def("origin_offset", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::origin_offset, return_value_policy<reference_existing_object>())
	.def("clear_origin_offset", &CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_origin_offset)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleEnt>("CDOTAUserMsg_ParticleManager_UpdateParticleEnt")
	.def("has_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_control_point)
	.def("control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::control_point)
	.def("clear_control_point", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_control_point)
	.def("has_entity_handle", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_entity_handle)
	.def("entity_handle", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::entity_handle)
	.def("clear_entity_handle", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_entity_handle)
	.def("has_attach_type", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_attach_type)
	.def("attach_type", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::attach_type)
	.def("clear_attach_type", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_attach_type)
	.def("has_attachment", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_attachment)
	.def("attachment", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::attachment)
	.def("clear_attachment", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_attachment)
	.def("has_fallback_position", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_fallback_position)
	.def("fallback_position", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::fallback_position, return_value_policy<reference_existing_object>())
	.def("clear_fallback_position", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_fallback_position)
	.def("has_include_wearables", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_include_wearables)
	.def("include_wearables", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::include_wearables)
	.def("clear_include_wearables", &CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_include_wearables)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen>("CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen")
	.def("has_set_frozen", &CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::has_set_frozen)
	.def("set_frozen", &CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::set_frozen)
	.def("clear_set_frozen", &CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::clear_set_frozen)
;

class_<CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw>("CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw")
	.def("has_should_draw", &CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::has_should_draw)
	.def("should_draw", &CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::should_draw)
	.def("clear_should_draw", &CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::clear_should_draw)
;

class_<CDOTAUserMsg_ParticleManager>("CDOTAUserMsg_ParticleManager")
	.def("has_type", &CDOTAUserMsg_ParticleManager::has_type)
	.def("type", &CDOTAUserMsg_ParticleManager::type)
	.def("clear_type", &CDOTAUserMsg_ParticleManager::clear_type)
	.def("has_index", &CDOTAUserMsg_ParticleManager::has_index)
	.def("index", &CDOTAUserMsg_ParticleManager::index)
	.def("clear_index", &CDOTAUserMsg_ParticleManager::clear_index)
	.def("has_release_particle_index", &CDOTAUserMsg_ParticleManager::has_release_particle_index)
	.def("release_particle_index", &CDOTAUserMsg_ParticleManager::release_particle_index, return_value_policy<reference_existing_object>())
	.def("clear_release_particle_index", &CDOTAUserMsg_ParticleManager::clear_release_particle_index)
	.def("has_create_particle", &CDOTAUserMsg_ParticleManager::has_create_particle)
	.def("create_particle", &CDOTAUserMsg_ParticleManager::create_particle, return_value_policy<reference_existing_object>())
	.def("clear_create_particle", &CDOTAUserMsg_ParticleManager::clear_create_particle)
	.def("has_destroy_particle", &CDOTAUserMsg_ParticleManager::has_destroy_particle)
	.def("destroy_particle", &CDOTAUserMsg_ParticleManager::destroy_particle, return_value_policy<reference_existing_object>())
	.def("clear_destroy_particle", &CDOTAUserMsg_ParticleManager::clear_destroy_particle)
	.def("has_destroy_particle_involving", &CDOTAUserMsg_ParticleManager::has_destroy_particle_involving)
	.def("destroy_particle_involving", &CDOTAUserMsg_ParticleManager::destroy_particle_involving, return_value_policy<reference_existing_object>())
	.def("clear_destroy_particle_involving", &CDOTAUserMsg_ParticleManager::clear_destroy_particle_involving)
	.def("has_update_particle", &CDOTAUserMsg_ParticleManager::has_update_particle)
	.def("update_particle", &CDOTAUserMsg_ParticleManager::update_particle, return_value_policy<reference_existing_object>())
	.def("clear_update_particle", &CDOTAUserMsg_ParticleManager::clear_update_particle)
	.def("has_update_particle_fwd", &CDOTAUserMsg_ParticleManager::has_update_particle_fwd)
	.def("update_particle_fwd", &CDOTAUserMsg_ParticleManager::update_particle_fwd, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_fwd", &CDOTAUserMsg_ParticleManager::clear_update_particle_fwd)
	.def("has_update_particle_orient", &CDOTAUserMsg_ParticleManager::has_update_particle_orient)
	.def("update_particle_orient", &CDOTAUserMsg_ParticleManager::update_particle_orient, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_orient", &CDOTAUserMsg_ParticleManager::clear_update_particle_orient)
	.def("has_update_particle_fallback", &CDOTAUserMsg_ParticleManager::has_update_particle_fallback)
	.def("update_particle_fallback", &CDOTAUserMsg_ParticleManager::update_particle_fallback, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_fallback", &CDOTAUserMsg_ParticleManager::clear_update_particle_fallback)
	.def("has_update_particle_offset", &CDOTAUserMsg_ParticleManager::has_update_particle_offset)
	.def("update_particle_offset", &CDOTAUserMsg_ParticleManager::update_particle_offset, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_offset", &CDOTAUserMsg_ParticleManager::clear_update_particle_offset)
	.def("has_update_particle_ent", &CDOTAUserMsg_ParticleManager::has_update_particle_ent)
	.def("update_particle_ent", &CDOTAUserMsg_ParticleManager::update_particle_ent, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_ent", &CDOTAUserMsg_ParticleManager::clear_update_particle_ent)
	.def("has_update_particle_should_draw", &CDOTAUserMsg_ParticleManager::has_update_particle_should_draw)
	.def("update_particle_should_draw", &CDOTAUserMsg_ParticleManager::update_particle_should_draw, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_should_draw", &CDOTAUserMsg_ParticleManager::clear_update_particle_should_draw)
	.def("has_update_particle_set_frozen", &CDOTAUserMsg_ParticleManager::has_update_particle_set_frozen)
	.def("update_particle_set_frozen", &CDOTAUserMsg_ParticleManager::update_particle_set_frozen, return_value_policy<reference_existing_object>())
	.def("clear_update_particle_set_frozen", &CDOTAUserMsg_ParticleManager::clear_update_particle_set_frozen)
;

class_<CDOTAUserMsg_OverheadEvent>("CDOTAUserMsg_OverheadEvent")
	.def("has_message_type", &CDOTAUserMsg_OverheadEvent::has_message_type)
	.def("message_type", &CDOTAUserMsg_OverheadEvent::message_type)
	.def("clear_message_type", &CDOTAUserMsg_OverheadEvent::clear_message_type)
	.def("has_value", &CDOTAUserMsg_OverheadEvent::has_value)
	.def("value", &CDOTAUserMsg_OverheadEvent::value)
	.def("clear_value", &CDOTAUserMsg_OverheadEvent::clear_value)
	.def("has_target_player_entindex", &CDOTAUserMsg_OverheadEvent::has_target_player_entindex)
	.def("target_player_entindex", &CDOTAUserMsg_OverheadEvent::target_player_entindex)
	.def("clear_target_player_entindex", &CDOTAUserMsg_OverheadEvent::clear_target_player_entindex)
	.def("has_target_entindex", &CDOTAUserMsg_OverheadEvent::has_target_entindex)
	.def("target_entindex", &CDOTAUserMsg_OverheadEvent::target_entindex)
	.def("clear_target_entindex", &CDOTAUserMsg_OverheadEvent::clear_target_entindex)
	.def("has_source_player_entindex", &CDOTAUserMsg_OverheadEvent::has_source_player_entindex)
	.def("source_player_entindex", &CDOTAUserMsg_OverheadEvent::source_player_entindex)
	.def("clear_source_player_entindex", &CDOTAUserMsg_OverheadEvent::clear_source_player_entindex)
;

class_<CDOTAUserMsg_TutorialTipInfo>("CDOTAUserMsg_TutorialTipInfo")
	.def("has_name", &CDOTAUserMsg_TutorialTipInfo::has_name)
	.def("name", &CDOTAUserMsg_TutorialTipInfo::name, return_value_policy<copy_const_reference>())
	.def("clear_name", &CDOTAUserMsg_TutorialTipInfo::clear_name)
	.def("has_progress", &CDOTAUserMsg_TutorialTipInfo::has_progress)
	.def("progress", &CDOTAUserMsg_TutorialTipInfo::progress)
	.def("clear_progress", &CDOTAUserMsg_TutorialTipInfo::clear_progress)
;

class_<CDOTAUserMsg_TutorialFinish>("CDOTAUserMsg_TutorialFinish")
	.def("has_heading", &CDOTAUserMsg_TutorialFinish::has_heading)
	.def("heading", &CDOTAUserMsg_TutorialFinish::heading, return_value_policy<copy_const_reference>())
	.def("clear_heading", &CDOTAUserMsg_TutorialFinish::clear_heading)
	.def("has_emblem", &CDOTAUserMsg_TutorialFinish::has_emblem)
	.def("emblem", &CDOTAUserMsg_TutorialFinish::emblem, return_value_policy<copy_const_reference>())
	.def("clear_emblem", &CDOTAUserMsg_TutorialFinish::clear_emblem)
	.def("has_body", &CDOTAUserMsg_TutorialFinish::has_body)
	.def("body", &CDOTAUserMsg_TutorialFinish::body, return_value_policy<copy_const_reference>())
	.def("clear_body", &CDOTAUserMsg_TutorialFinish::clear_body)
	.def("has_success", &CDOTAUserMsg_TutorialFinish::has_success)
	.def("success", &CDOTAUserMsg_TutorialFinish::success)
	.def("clear_success", &CDOTAUserMsg_TutorialFinish::clear_success)
;

class_<CDOTAUserMsg_SendGenericToolTip>("CDOTAUserMsg_SendGenericToolTip")
	.def("has_title", &CDOTAUserMsg_SendGenericToolTip::has_title)
	.def("title", &CDOTAUserMsg_SendGenericToolTip::title, return_value_policy<copy_const_reference>())
	.def("clear_title", &CDOTAUserMsg_SendGenericToolTip::clear_title)
	.def("has_text", &CDOTAUserMsg_SendGenericToolTip::has_text)
	.def("text", &CDOTAUserMsg_SendGenericToolTip::text, return_value_policy<copy_const_reference>())
	.def("clear_text", &CDOTAUserMsg_SendGenericToolTip::clear_text)
	.def("has_entindex", &CDOTAUserMsg_SendGenericToolTip::has_entindex)
	.def("entindex", &CDOTAUserMsg_SendGenericToolTip::entindex)
	.def("clear_entindex", &CDOTAUserMsg_SendGenericToolTip::clear_entindex)
	.def("has_close", &CDOTAUserMsg_SendGenericToolTip::has_close)
	.def("close", &CDOTAUserMsg_SendGenericToolTip::close)
	.def("clear_close", &CDOTAUserMsg_SendGenericToolTip::clear_close)
;

class_<CDOTAUserMsg_WorldLine>("CDOTAUserMsg_WorldLine")
	.def("has_player_id", &CDOTAUserMsg_WorldLine::has_player_id)
	.def("player_id", &CDOTAUserMsg_WorldLine::player_id)
	.def("clear_player_id", &CDOTAUserMsg_WorldLine::clear_player_id)
	.def("has_worldline", &CDOTAUserMsg_WorldLine::has_worldline)
	.def("worldline", &CDOTAUserMsg_WorldLine::worldline, return_value_policy<reference_existing_object>())
	.def("clear_worldline", &CDOTAUserMsg_WorldLine::clear_worldline)
;

class_<CDOTAUserMsg_TournamentDrop>("CDOTAUserMsg_TournamentDrop")
	.def("has_winner_name", &CDOTAUserMsg_TournamentDrop::has_winner_name)
	.def("winner_name", &CDOTAUserMsg_TournamentDrop::winner_name, return_value_policy<copy_const_reference>())
	.def("clear_winner_name", &CDOTAUserMsg_TournamentDrop::clear_winner_name)
	.def("has_event_type", &CDOTAUserMsg_TournamentDrop::has_event_type)
	.def("event_type", &CDOTAUserMsg_TournamentDrop::event_type)
	.def("clear_event_type", &CDOTAUserMsg_TournamentDrop::clear_event_type)
;

class_<CDOTAUserMsg_ChatWheel>("CDOTAUserMsg_ChatWheel")
	.def("has_chat_message", &CDOTAUserMsg_ChatWheel::has_chat_message)
	.def("chat_message", &CDOTAUserMsg_ChatWheel::chat_message)
	.def("clear_chat_message", &CDOTAUserMsg_ChatWheel::clear_chat_message)
	.def("has_player_id", &CDOTAUserMsg_ChatWheel::has_player_id)
	.def("player_id", &CDOTAUserMsg_ChatWheel::player_id)
	.def("clear_player_id", &CDOTAUserMsg_ChatWheel::clear_player_id)
	.def("has_account_id", &CDOTAUserMsg_ChatWheel::has_account_id)
	.def("account_id", &CDOTAUserMsg_ChatWheel::account_id)
	.def("clear_account_id", &CDOTAUserMsg_ChatWheel::clear_account_id)
	.def("has_param_hero_id", &CDOTAUserMsg_ChatWheel::has_param_hero_id)
	.def("param_hero_id", &CDOTAUserMsg_ChatWheel::param_hero_id)
	.def("clear_param_hero_id", &CDOTAUserMsg_ChatWheel::clear_param_hero_id)
;

class_<CDOTAUserMsg_ReceivedXmasGift>("CDOTAUserMsg_ReceivedXmasGift")
	.def("has_player_id", &CDOTAUserMsg_ReceivedXmasGift::has_player_id)
	.def("player_id", &CDOTAUserMsg_ReceivedXmasGift::player_id)
	.def("clear_player_id", &CDOTAUserMsg_ReceivedXmasGift::clear_player_id)
	.def("has_item_name", &CDOTAUserMsg_ReceivedXmasGift::has_item_name)
	.def("item_name", &CDOTAUserMsg_ReceivedXmasGift::item_name, return_value_policy<copy_const_reference>())
	.def("clear_item_name", &CDOTAUserMsg_ReceivedXmasGift::clear_item_name)
	.def("has_inventory_slot", &CDOTAUserMsg_ReceivedXmasGift::has_inventory_slot)
	.def("inventory_slot", &CDOTAUserMsg_ReceivedXmasGift::inventory_slot)
	.def("clear_inventory_slot", &CDOTAUserMsg_ReceivedXmasGift::clear_inventory_slot)
;

class_<CDOTAUserMsg_ShowSurvey>("CDOTAUserMsg_ShowSurvey")
	.def("has_survey_id", &CDOTAUserMsg_ShowSurvey::has_survey_id)
	.def("survey_id", &CDOTAUserMsg_ShowSurvey::survey_id)
	.def("clear_survey_id", &CDOTAUserMsg_ShowSurvey::clear_survey_id)
	.def("has_match_id", &CDOTAUserMsg_ShowSurvey::has_match_id)
	.def("match_id", &CDOTAUserMsg_ShowSurvey::match_id)
	.def("clear_match_id", &CDOTAUserMsg_ShowSurvey::clear_match_id)
	.def("has_response_style", &CDOTAUserMsg_ShowSurvey::has_response_style)
	.def("response_style", &CDOTAUserMsg_ShowSurvey::response_style, return_value_policy<copy_const_reference>())
	.def("clear_response_style", &CDOTAUserMsg_ShowSurvey::clear_response_style)
;

class_<CDOTAUserMsg_UpdateSharedContent>("CDOTAUserMsg_UpdateSharedContent")
	.def("has_slot_type", &CDOTAUserMsg_UpdateSharedContent::has_slot_type)
	.def("slot_type", &CDOTAUserMsg_UpdateSharedContent::slot_type)
	.def("clear_slot_type", &CDOTAUserMsg_UpdateSharedContent::clear_slot_type)
;

class_<CDOTAUserMsg_TutorialRequestExp>("CDOTAUserMsg_TutorialRequestExp")
;

class_<CDOTAUserMsg_TutorialFade>("CDOTAUserMsg_TutorialFade")
	.def("has_tgt_alpha", &CDOTAUserMsg_TutorialFade::has_tgt_alpha)
	.def("tgt_alpha", &CDOTAUserMsg_TutorialFade::tgt_alpha)
	.def("clear_tgt_alpha", &CDOTAUserMsg_TutorialFade::clear_tgt_alpha)
;

class_<CDOTAUserMsg_TutorialPingMinimap>("CDOTAUserMsg_TutorialPingMinimap")
	.def("has_player_id", &CDOTAUserMsg_TutorialPingMinimap::has_player_id)
	.def("player_id", &CDOTAUserMsg_TutorialPingMinimap::player_id)
	.def("clear_player_id", &CDOTAUserMsg_TutorialPingMinimap::clear_player_id)
	.def("has_pos_x", &CDOTAUserMsg_TutorialPingMinimap::has_pos_x)
	.def("pos_x", &CDOTAUserMsg_TutorialPingMinimap::pos_x)
	.def("clear_pos_x", &CDOTAUserMsg_TutorialPingMinimap::clear_pos_x)
	.def("has_pos_y", &CDOTAUserMsg_TutorialPingMinimap::has_pos_y)
	.def("pos_y", &CDOTAUserMsg_TutorialPingMinimap::pos_y)
	.def("clear_pos_y", &CDOTAUserMsg_TutorialPingMinimap::clear_pos_y)
	.def("has_pos_z", &CDOTAUserMsg_TutorialPingMinimap::has_pos_z)
	.def("pos_z", &CDOTAUserMsg_TutorialPingMinimap::pos_z)
	.def("clear_pos_z", &CDOTAUserMsg_TutorialPingMinimap::clear_pos_z)
	.def("has_entity_index", &CDOTAUserMsg_TutorialPingMinimap::has_entity_index)
	.def("entity_index", &CDOTAUserMsg_TutorialPingMinimap::entity_index)
	.def("clear_entity_index", &CDOTAUserMsg_TutorialPingMinimap::clear_entity_index)
;

class_<CDOTA_UM_GamerulesStateChanged>("CDOTA_UM_GamerulesStateChanged")
	.def("has_state", &CDOTA_UM_GamerulesStateChanged::has_state)
	.def("state", &CDOTA_UM_GamerulesStateChanged::state)
	.def("clear_state", &CDOTA_UM_GamerulesStateChanged::clear_state)
;

class_<CDOTAUserMsg_AddQuestLogEntry>("CDOTAUserMsg_AddQuestLogEntry")
	.def("has_npc_name", &CDOTAUserMsg_AddQuestLogEntry::has_npc_name)
	.def("npc_name", &CDOTAUserMsg_AddQuestLogEntry::npc_name, return_value_policy<copy_const_reference>())
	.def("clear_npc_name", &CDOTAUserMsg_AddQuestLogEntry::clear_npc_name)
	.def("has_npc_dialog", &CDOTAUserMsg_AddQuestLogEntry::has_npc_dialog)
	.def("npc_dialog", &CDOTAUserMsg_AddQuestLogEntry::npc_dialog, return_value_policy<copy_const_reference>())
	.def("clear_npc_dialog", &CDOTAUserMsg_AddQuestLogEntry::clear_npc_dialog)
;

class_<CDOTAUserMsg_SendStatPopup>("CDOTAUserMsg_SendStatPopup")
	.def("has_player_id", &CDOTAUserMsg_SendStatPopup::has_player_id)
	.def("player_id", &CDOTAUserMsg_SendStatPopup::player_id)
	.def("clear_player_id", &CDOTAUserMsg_SendStatPopup::clear_player_id)
	.def("has_statpopup", &CDOTAUserMsg_SendStatPopup::has_statpopup)
	.def("statpopup", &CDOTAUserMsg_SendStatPopup::statpopup, return_value_policy<reference_existing_object>())
	.def("clear_statpopup", &CDOTAUserMsg_SendStatPopup::clear_statpopup)
;

class_<CDOTAUserMsg_SendRoshanPopup>("CDOTAUserMsg_SendRoshanPopup")
	.def("has_reclaimed", &CDOTAUserMsg_SendRoshanPopup::has_reclaimed)
	.def("reclaimed", &CDOTAUserMsg_SendRoshanPopup::reclaimed)
	.def("clear_reclaimed", &CDOTAUserMsg_SendRoshanPopup::clear_reclaimed)
	.def("has_gametime", &CDOTAUserMsg_SendRoshanPopup::has_gametime)
	.def("gametime", &CDOTAUserMsg_SendRoshanPopup::gametime)
	.def("clear_gametime", &CDOTAUserMsg_SendRoshanPopup::clear_gametime)
;

class_<CDOTAUserMsg_SendFinalGold>("CDOTAUserMsg_SendFinalGold")
	.def("reliable_gold_size", &CDOTAUserMsg_SendFinalGold::reliable_gold_size)
	.def("clear_reliable_gold", &CDOTAUserMsg_SendFinalGold::clear_reliable_gold)
	.def("unreliable_gold_size", &CDOTAUserMsg_SendFinalGold::unreliable_gold_size)
	.def("clear_unreliable_gold", &CDOTAUserMsg_SendFinalGold::clear_unreliable_gold)
;

class_<CDOTAUserMsg_CustomMsg>("CDOTAUserMsg_CustomMsg")
	.def("has_message", &CDOTAUserMsg_CustomMsg::has_message)
	.def("message", &CDOTAUserMsg_CustomMsg::message, return_value_policy<copy_const_reference>())
	.def("clear_message", &CDOTAUserMsg_CustomMsg::clear_message)
	.def("has_player_id", &CDOTAUserMsg_CustomMsg::has_player_id)
	.def("player_id", &CDOTAUserMsg_CustomMsg::player_id)
	.def("clear_player_id", &CDOTAUserMsg_CustomMsg::clear_player_id)
	.def("has_value", &CDOTAUserMsg_CustomMsg::has_value)
	.def("value", &CDOTAUserMsg_CustomMsg::value)
	.def("clear_value", &CDOTAUserMsg_CustomMsg::clear_value)
;

class_<CDOTAUserMsg_CoachHUDPing>("CDOTAUserMsg_CoachHUDPing")
	.def("has_player_id", &CDOTAUserMsg_CoachHUDPing::has_player_id)
	.def("player_id", &CDOTAUserMsg_CoachHUDPing::player_id)
	.def("clear_player_id", &CDOTAUserMsg_CoachHUDPing::clear_player_id)
	.def("has_hud_ping", &CDOTAUserMsg_CoachHUDPing::has_hud_ping)
	.def("hud_ping", &CDOTAUserMsg_CoachHUDPing::hud_ping, return_value_policy<reference_existing_object>())
	.def("clear_hud_ping", &CDOTAUserMsg_CoachHUDPing::clear_hud_ping)
;

class_<CDOTAUserMsg_ClientLoadGridNav>("CDOTAUserMsg_ClientLoadGridNav")
;

class_<CDOTAUserMsg_AbilityPing>("CDOTAUserMsg_AbilityPing")
	.def("has_player_id", &CDOTAUserMsg_AbilityPing::has_player_id)
	.def("player_id", &CDOTAUserMsg_AbilityPing::player_id)
	.def("clear_player_id", &CDOTAUserMsg_AbilityPing::clear_player_id)
	.def("has_ability_id", &CDOTAUserMsg_AbilityPing::has_ability_id)
	.def("ability_id", &CDOTAUserMsg_AbilityPing::ability_id)
	.def("clear_ability_id", &CDOTAUserMsg_AbilityPing::clear_ability_id)
	.def("has_type", &CDOTAUserMsg_AbilityPing::has_type)
	.def("type", &CDOTAUserMsg_AbilityPing::type)
	.def("clear_type", &CDOTAUserMsg_AbilityPing::clear_type)
	.def("has_cooldown_seconds", &CDOTAUserMsg_AbilityPing::has_cooldown_seconds)
	.def("cooldown_seconds", &CDOTAUserMsg_AbilityPing::cooldown_seconds)
	.def("clear_cooldown_seconds", &CDOTAUserMsg_AbilityPing::clear_cooldown_seconds)
;

class_<CDOTAUserMsg_ShowGenericPopup>("CDOTAUserMsg_ShowGenericPopup")
	.def("has_header", &CDOTAUserMsg_ShowGenericPopup::has_header)
	.def("header", &CDOTAUserMsg_ShowGenericPopup::header, return_value_policy<copy_const_reference>())
	.def("clear_header", &CDOTAUserMsg_ShowGenericPopup::clear_header)
	.def("has_body", &CDOTAUserMsg_ShowGenericPopup::has_body)
	.def("body", &CDOTAUserMsg_ShowGenericPopup::body, return_value_policy<copy_const_reference>())
	.def("clear_body", &CDOTAUserMsg_ShowGenericPopup::clear_body)
	.def("has_param1", &CDOTAUserMsg_ShowGenericPopup::has_param1)
	.def("param1", &CDOTAUserMsg_ShowGenericPopup::param1, return_value_policy<copy_const_reference>())
	.def("clear_param1", &CDOTAUserMsg_ShowGenericPopup::clear_param1)
	.def("has_param2", &CDOTAUserMsg_ShowGenericPopup::has_param2)
	.def("param2", &CDOTAUserMsg_ShowGenericPopup::param2, return_value_policy<copy_const_reference>())
	.def("clear_param2", &CDOTAUserMsg_ShowGenericPopup::clear_param2)
	.def("has_tint_screen", &CDOTAUserMsg_ShowGenericPopup::has_tint_screen)
	.def("tint_screen", &CDOTAUserMsg_ShowGenericPopup::tint_screen)
	.def("clear_tint_screen", &CDOTAUserMsg_ShowGenericPopup::clear_tint_screen)
	.def("has_show_no_other_dialogs", &CDOTAUserMsg_ShowGenericPopup::has_show_no_other_dialogs)
	.def("show_no_other_dialogs", &CDOTAUserMsg_ShowGenericPopup::show_no_other_dialogs)
	.def("clear_show_no_other_dialogs", &CDOTAUserMsg_ShowGenericPopup::clear_show_no_other_dialogs)
;

class_<CDOTAUserMsg_VoteStart>("CDOTAUserMsg_VoteStart")
	.def("has_title", &CDOTAUserMsg_VoteStart::has_title)
	.def("title", &CDOTAUserMsg_VoteStart::title, return_value_policy<copy_const_reference>())
	.def("clear_title", &CDOTAUserMsg_VoteStart::clear_title)
	.def("has_duration", &CDOTAUserMsg_VoteStart::has_duration)
	.def("duration", &CDOTAUserMsg_VoteStart::duration)
	.def("clear_duration", &CDOTAUserMsg_VoteStart::clear_duration)
	.def("has_choice_count", &CDOTAUserMsg_VoteStart::has_choice_count)
	.def("choice_count", &CDOTAUserMsg_VoteStart::choice_count)
	.def("clear_choice_count", &CDOTAUserMsg_VoteStart::clear_choice_count)
	.def("choices_size", &CDOTAUserMsg_VoteStart::choices_size)
	.def("clear_choices", &CDOTAUserMsg_VoteStart::clear_choices)
;

class_<CDOTAUserMsg_VoteUpdate>("CDOTAUserMsg_VoteUpdate")
	.def("choice_counts_size", &CDOTAUserMsg_VoteUpdate::choice_counts_size)
	.def("clear_choice_counts", &CDOTAUserMsg_VoteUpdate::clear_choice_counts)
;

class_<CDOTAUserMsg_VoteEnd>("CDOTAUserMsg_VoteEnd")
	.def("has_selected_choice", &CDOTAUserMsg_VoteEnd::has_selected_choice)
	.def("selected_choice", &CDOTAUserMsg_VoteEnd::selected_choice)
	.def("clear_selected_choice", &CDOTAUserMsg_VoteEnd::clear_selected_choice)
;

class_<CDOTAUserMsg_BoosterStatePlayer>("CDOTAUserMsg_BoosterStatePlayer")
	.def("has_player_id", &CDOTAUserMsg_BoosterStatePlayer::has_player_id)
	.def("player_id", &CDOTAUserMsg_BoosterStatePlayer::player_id)
	.def("clear_player_id", &CDOTAUserMsg_BoosterStatePlayer::clear_player_id)
	.def("has_bonus", &CDOTAUserMsg_BoosterStatePlayer::has_bonus)
	.def("bonus", &CDOTAUserMsg_BoosterStatePlayer::bonus)
	.def("clear_bonus", &CDOTAUserMsg_BoosterStatePlayer::clear_bonus)
	.def("has_event_bonus", &CDOTAUserMsg_BoosterStatePlayer::has_event_bonus)
	.def("event_bonus", &CDOTAUserMsg_BoosterStatePlayer::event_bonus)
	.def("clear_event_bonus", &CDOTAUserMsg_BoosterStatePlayer::clear_event_bonus)
;

class_<CDOTAUserMsg_BoosterState>("CDOTAUserMsg_BoosterState")
	.def("boosted_players_size", &CDOTAUserMsg_BoosterState::boosted_players_size)
	.def("clear_boosted_players", &CDOTAUserMsg_BoosterState::clear_boosted_players)
;

#endif // PROTOBUF_dota_usermessages.proto_BOOST_PYTHON_INCLUDED
