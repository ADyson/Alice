// Generated by the protocol buffer compiler. DO NOT EDIT!
// Source: demo

#ifndef PROTOBUF_demo_BOOST_PYTHON_INCLUDED
#define PROTOBUF_demo_BOOST_PYTHON_INCLUDED

class_<CDemoFileHeader>("CDemoFileHeader")
	.def("has_demo_file_stamp", &CDemoFileHeader::has_demo_file_stamp)
	.def("demo_file_stamp", &CDemoFileHeader::demo_file_stamp, return_value_policy<copy_const_reference>())
	.def("clear_demo_file_stamp", &CDemoFileHeader::clear_demo_file_stamp)
	.def("has_network_protocol", &CDemoFileHeader::has_network_protocol)
	.def("network_protocol", &CDemoFileHeader::network_protocol)
	.def("clear_network_protocol", &CDemoFileHeader::clear_network_protocol)
	.def("has_server_name", &CDemoFileHeader::has_server_name)
	.def("server_name", &CDemoFileHeader::server_name, return_value_policy<copy_const_reference>())
	.def("clear_server_name", &CDemoFileHeader::clear_server_name)
	.def("has_client_name", &CDemoFileHeader::has_client_name)
	.def("client_name", &CDemoFileHeader::client_name, return_value_policy<copy_const_reference>())
	.def("clear_client_name", &CDemoFileHeader::clear_client_name)
	.def("has_map_name", &CDemoFileHeader::has_map_name)
	.def("map_name", &CDemoFileHeader::map_name, return_value_policy<copy_const_reference>())
	.def("clear_map_name", &CDemoFileHeader::clear_map_name)
	.def("has_game_directory", &CDemoFileHeader::has_game_directory)
	.def("game_directory", &CDemoFileHeader::game_directory, return_value_policy<copy_const_reference>())
	.def("clear_game_directory", &CDemoFileHeader::clear_game_directory)
	.def("has_fullpackets_version", &CDemoFileHeader::has_fullpackets_version)
	.def("fullpackets_version", &CDemoFileHeader::fullpackets_version)
	.def("clear_fullpackets_version", &CDemoFileHeader::clear_fullpackets_version)
	.def("has_allow_clientside_entities", &CDemoFileHeader::has_allow_clientside_entities)
	.def("allow_clientside_entities", &CDemoFileHeader::allow_clientside_entities)
	.def("clear_allow_clientside_entities", &CDemoFileHeader::clear_allow_clientside_entities)
	.def("has_allow_clientside_particles", &CDemoFileHeader::has_allow_clientside_particles)
	.def("allow_clientside_particles", &CDemoFileHeader::allow_clientside_particles)
	.def("clear_allow_clientside_particles", &CDemoFileHeader::clear_allow_clientside_particles)
;

class_<CGameInfo_CDotaGameInfo_CPlayerInfo>("CGameInfo_CDotaGameInfo_CPlayerInfo")
	.def("has_hero_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::has_hero_name)
	.def("hero_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::hero_name, return_value_policy<copy_const_reference>())
	.def("clear_hero_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::clear_hero_name)
	.def("has_player_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::has_player_name)
	.def("player_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::player_name, return_value_policy<copy_const_reference>())
	.def("clear_player_name", &CGameInfo_CDotaGameInfo_CPlayerInfo::clear_player_name)
	.def("has_is_fake_client", &CGameInfo_CDotaGameInfo_CPlayerInfo::has_is_fake_client)
	.def("is_fake_client", &CGameInfo_CDotaGameInfo_CPlayerInfo::is_fake_client)
	.def("clear_is_fake_client", &CGameInfo_CDotaGameInfo_CPlayerInfo::clear_is_fake_client)
	.def("has_steamid", &CGameInfo_CDotaGameInfo_CPlayerInfo::has_steamid)
	.def("steamid", &CGameInfo_CDotaGameInfo_CPlayerInfo::steamid)
	.def("clear_steamid", &CGameInfo_CDotaGameInfo_CPlayerInfo::clear_steamid)
	.def("has_game_team", &CGameInfo_CDotaGameInfo_CPlayerInfo::has_game_team)
	.def("game_team", &CGameInfo_CDotaGameInfo_CPlayerInfo::game_team)
	.def("clear_game_team", &CGameInfo_CDotaGameInfo_CPlayerInfo::clear_game_team)
;

class_<CGameInfo_CDotaGameInfo_CHeroSelectEvent>("CGameInfo_CDotaGameInfo_CHeroSelectEvent")
	.def("has_is_pick", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_is_pick)
	.def("is_pick", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::is_pick)
	.def("clear_is_pick", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_is_pick)
	.def("has_team", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_team)
	.def("team", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::team)
	.def("clear_team", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_team)
	.def("has_hero_id", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_hero_id)
	.def("hero_id", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::hero_id)
	.def("clear_hero_id", &CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_hero_id)
;

class_<CGameInfo_CDotaGameInfo>("CGameInfo_CDotaGameInfo")
	.def("has_match_id", &CGameInfo_CDotaGameInfo::has_match_id)
	.def("match_id", &CGameInfo_CDotaGameInfo::match_id)
	.def("clear_match_id", &CGameInfo_CDotaGameInfo::clear_match_id)
	.def("has_game_mode", &CGameInfo_CDotaGameInfo::has_game_mode)
	.def("game_mode", &CGameInfo_CDotaGameInfo::game_mode)
	.def("clear_game_mode", &CGameInfo_CDotaGameInfo::clear_game_mode)
	.def("has_game_winner", &CGameInfo_CDotaGameInfo::has_game_winner)
	.def("game_winner", &CGameInfo_CDotaGameInfo::game_winner)
	.def("clear_game_winner", &CGameInfo_CDotaGameInfo::clear_game_winner)
	.def("player_info_size", &CGameInfo_CDotaGameInfo::player_info_size)
	.def("clear_player_info", &CGameInfo_CDotaGameInfo::clear_player_info)
	.def("has_leagueid", &CGameInfo_CDotaGameInfo::has_leagueid)
	.def("leagueid", &CGameInfo_CDotaGameInfo::leagueid)
	.def("clear_leagueid", &CGameInfo_CDotaGameInfo::clear_leagueid)
	.def("picks_bans_size", &CGameInfo_CDotaGameInfo::picks_bans_size)
	.def("clear_picks_bans", &CGameInfo_CDotaGameInfo::clear_picks_bans)
	.def("has_radiant_team_id", &CGameInfo_CDotaGameInfo::has_radiant_team_id)
	.def("radiant_team_id", &CGameInfo_CDotaGameInfo::radiant_team_id)
	.def("clear_radiant_team_id", &CGameInfo_CDotaGameInfo::clear_radiant_team_id)
	.def("has_dire_team_id", &CGameInfo_CDotaGameInfo::has_dire_team_id)
	.def("dire_team_id", &CGameInfo_CDotaGameInfo::dire_team_id)
	.def("clear_dire_team_id", &CGameInfo_CDotaGameInfo::clear_dire_team_id)
	.def("has_radiant_team_tag", &CGameInfo_CDotaGameInfo::has_radiant_team_tag)
	.def("radiant_team_tag", &CGameInfo_CDotaGameInfo::radiant_team_tag, return_value_policy<copy_const_reference>())
	.def("clear_radiant_team_tag", &CGameInfo_CDotaGameInfo::clear_radiant_team_tag)
	.def("has_dire_team_tag", &CGameInfo_CDotaGameInfo::has_dire_team_tag)
	.def("dire_team_tag", &CGameInfo_CDotaGameInfo::dire_team_tag, return_value_policy<copy_const_reference>())
	.def("clear_dire_team_tag", &CGameInfo_CDotaGameInfo::clear_dire_team_tag)
	.def("has_end_time", &CGameInfo_CDotaGameInfo::has_end_time)
	.def("end_time", &CGameInfo_CDotaGameInfo::end_time)
	.def("clear_end_time", &CGameInfo_CDotaGameInfo::clear_end_time)
;

class_<CGameInfo>("CGameInfo")
	.def("has_dota", &CGameInfo::has_dota)
	.def("dota", &CGameInfo::dota, return_value_policy<reference_existing_object>())
	.def("clear_dota", &CGameInfo::clear_dota)
;

class_<CDemoFileInfo>("CDemoFileInfo")
	.def("has_playback_time", &CDemoFileInfo::has_playback_time)
	.def("playback_time", &CDemoFileInfo::playback_time)
	.def("clear_playback_time", &CDemoFileInfo::clear_playback_time)
	.def("has_playback_ticks", &CDemoFileInfo::has_playback_ticks)
	.def("playback_ticks", &CDemoFileInfo::playback_ticks)
	.def("clear_playback_ticks", &CDemoFileInfo::clear_playback_ticks)
	.def("has_playback_frames", &CDemoFileInfo::has_playback_frames)
	.def("playback_frames", &CDemoFileInfo::playback_frames)
	.def("clear_playback_frames", &CDemoFileInfo::clear_playback_frames)
	.def("has_game_info", &CDemoFileInfo::has_game_info)
	.def("game_info", &CDemoFileInfo::game_info, return_value_policy<reference_existing_object>())
	.def("clear_game_info", &CDemoFileInfo::clear_game_info)
;

class_<CDemoPacket>("CDemoPacket")
	.def("has_sequence_in", &CDemoPacket::has_sequence_in)
	.def("sequence_in", &CDemoPacket::sequence_in)
	.def("clear_sequence_in", &CDemoPacket::clear_sequence_in)
	.def("has_sequence_out_ack", &CDemoPacket::has_sequence_out_ack)
	.def("sequence_out_ack", &CDemoPacket::sequence_out_ack)
	.def("clear_sequence_out_ack", &CDemoPacket::clear_sequence_out_ack)
	.def("has_data", &CDemoPacket::has_data)
	.def("data", &CDemoPacket::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoPacket::clear_data)
;

class_<CDemoFullPacket>("CDemoFullPacket")
	.def("has_string_table", &CDemoFullPacket::has_string_table)
	.def("string_table", &CDemoFullPacket::string_table, return_value_policy<reference_existing_object>())
	.def("clear_string_table", &CDemoFullPacket::clear_string_table)
	.def("has_packet", &CDemoFullPacket::has_packet)
	.def("packet", &CDemoFullPacket::packet, return_value_policy<reference_existing_object>())
	.def("clear_packet", &CDemoFullPacket::clear_packet)
;

class_<CDemoSaveGame>("CDemoSaveGame")
	.def("has_data", &CDemoSaveGame::has_data)
	.def("data", &CDemoSaveGame::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoSaveGame::clear_data)
	.def("has_steam_id", &CDemoSaveGame::has_steam_id)
	.def("steam_id", &CDemoSaveGame::steam_id)
	.def("clear_steam_id", &CDemoSaveGame::clear_steam_id)
	.def("has_signature", &CDemoSaveGame::has_signature)
	.def("signature", &CDemoSaveGame::signature)
	.def("clear_signature", &CDemoSaveGame::clear_signature)
	.def("has_version", &CDemoSaveGame::has_version)
	.def("version", &CDemoSaveGame::version)
	.def("clear_version", &CDemoSaveGame::clear_version)
;

class_<CDemoSyncTick>("CDemoSyncTick")
;

class_<CDemoConsoleCmd>("CDemoConsoleCmd")
	.def("has_cmdstring", &CDemoConsoleCmd::has_cmdstring)
	.def("cmdstring", &CDemoConsoleCmd::cmdstring, return_value_policy<copy_const_reference>())
	.def("clear_cmdstring", &CDemoConsoleCmd::clear_cmdstring)
;

class_<CDemoSendTables>("CDemoSendTables")
	.def("has_data", &CDemoSendTables::has_data)
	.def("data", &CDemoSendTables::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoSendTables::clear_data)
;

class_<CDemoClassInfo_class_t>("CDemoClassInfo_class_t")
	.def("has_class_id", &CDemoClassInfo_class_t::has_class_id)
	.def("class_id", &CDemoClassInfo_class_t::class_id)
	.def("clear_class_id", &CDemoClassInfo_class_t::clear_class_id)
	.def("has_network_name", &CDemoClassInfo_class_t::has_network_name)
	.def("network_name", &CDemoClassInfo_class_t::network_name, return_value_policy<copy_const_reference>())
	.def("clear_network_name", &CDemoClassInfo_class_t::clear_network_name)
	.def("has_table_name", &CDemoClassInfo_class_t::has_table_name)
	.def("table_name", &CDemoClassInfo_class_t::table_name, return_value_policy<copy_const_reference>())
	.def("clear_table_name", &CDemoClassInfo_class_t::clear_table_name)
;

class_<CDemoClassInfo>("CDemoClassInfo")
	.def("classes_size", &CDemoClassInfo::classes_size)
	.def("clear_classes", &CDemoClassInfo::clear_classes)
;

class_<CDemoCustomData>("CDemoCustomData")
	.def("has_callback_index", &CDemoCustomData::has_callback_index)
	.def("callback_index", &CDemoCustomData::callback_index)
	.def("clear_callback_index", &CDemoCustomData::clear_callback_index)
	.def("has_data", &CDemoCustomData::has_data)
	.def("data", &CDemoCustomData::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoCustomData::clear_data)
;

class_<CDemoCustomDataCallbacks>("CDemoCustomDataCallbacks")
	.def("save_id_size", &CDemoCustomDataCallbacks::save_id_size)
	.def("clear_save_id", &CDemoCustomDataCallbacks::clear_save_id)
;

class_<CDemoStringTables_items_t>("CDemoStringTables_items_t")
	.def("has_str", &CDemoStringTables_items_t::has_str)
	.def("str", &CDemoStringTables_items_t::str, return_value_policy<copy_const_reference>())
	.def("clear_str", &CDemoStringTables_items_t::clear_str)
	.def("has_data", &CDemoStringTables_items_t::has_data)
	.def("data", &CDemoStringTables_items_t::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoStringTables_items_t::clear_data)
;

class_<CDemoStringTables_table_t>("CDemoStringTables_table_t")
	.def("has_table_name", &CDemoStringTables_table_t::has_table_name)
	.def("table_name", &CDemoStringTables_table_t::table_name, return_value_policy<copy_const_reference>())
	.def("clear_table_name", &CDemoStringTables_table_t::clear_table_name)
	.def("items_size", &CDemoStringTables_table_t::items_size)
	.def("clear_items", &CDemoStringTables_table_t::clear_items)
	.def("items_clientside_size", &CDemoStringTables_table_t::items_clientside_size)
	.def("clear_items_clientside", &CDemoStringTables_table_t::clear_items_clientside)
	.def("has_table_flags", &CDemoStringTables_table_t::has_table_flags)
	.def("table_flags", &CDemoStringTables_table_t::table_flags)
	.def("clear_table_flags", &CDemoStringTables_table_t::clear_table_flags)
;

class_<CDemoStringTables>("CDemoStringTables")
	.def("tables_size", &CDemoStringTables::tables_size)
	.def("clear_tables", &CDemoStringTables::clear_tables)
;

class_<CDemoStop>("CDemoStop")
;

class_<CDemoUserCmd>("CDemoUserCmd")
	.def("has_cmd_number", &CDemoUserCmd::has_cmd_number)
	.def("cmd_number", &CDemoUserCmd::cmd_number)
	.def("clear_cmd_number", &CDemoUserCmd::clear_cmd_number)
	.def("has_data", &CDemoUserCmd::has_data)
	.def("data", &CDemoUserCmd::data, return_value_policy<reference_existing_object>())
	.def("clear_data", &CDemoUserCmd::clear_data)
;

#endif // PROTOBUF_demo.proto_BOOST_PYTHON_INCLUDED
